"use strict";(self.webpackChunkk_8_s_security=self.webpackChunkk_8_s_security||[]).push([[9322],{8453:(e,t,r)=>{r.d(t,{R:()=>i,x:()=>l});var s=r(6540);const n={},c=s.createContext(n);function i(e){const t=s.useContext(c);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:i(e.components),s.createElement(c.Provider,{value:t},e.children)}},8594:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>a,contentTitle:()=>l,default:()=>u,frontMatter:()=>i,metadata:()=>s,toc:()=>o});const s=JSON.parse('{"id":"best_practices/monitoring_logging_and_runtime_security/kubectl_trace","title":"kubectl-trace","description":"kubectl-trace allows you to run eBPF tracing programs across your Kubernetes cluster for performance debugging and security analysis.","source":"@site/docs/best_practices/monitoring_logging_and_runtime_security/kubectl_trace.md","sourceDirName":"best_practices/monitoring_logging_and_runtime_security","slug":"/best_practices/monitoring_logging_and_runtime_security/kubectl_trace","permalink":"/docs/best_practices/monitoring_logging_and_runtime_security/kubectl_trace","draft":false,"unlisted":false,"editUrl":"https://github.com/geek-kb/k8s_security/edit/main/docs/best_practices/monitoring_logging_and_runtime_security/kubectl_trace.md","tags":[],"version":"current","lastUpdatedBy":"Itai Ganot","lastUpdatedAt":1742842158000,"sidebarPosition":7,"frontMatter":{"title":"kubectl-trace","description":"kubectl-trace allows you to run eBPF tracing programs across your Kubernetes cluster for performance debugging and security analysis.","sidebar_position":7}}');var n=r(4848),c=r(8453);const i={title:"kubectl-trace",description:"kubectl-trace allows you to run eBPF tracing programs across your Kubernetes cluster for performance debugging and security analysis.",sidebar_position:7},l="kubectl-trace",a={},o=[{value:"Usage",id:"usage",level:2},{value:"1. Install kubectl-trace",id:"1-install-kubectl-trace",level:3},{value:"2. Run a bpftrace Script on a Node",id:"2-run-a-bpftrace-script-on-a-node",level:3},{value:"3. Collect Trace Results",id:"3-collect-trace-results",level:3},{value:"Best Practices",id:"best-practices",level:2},{value:"Resources",id:"resources",level:2}];function d(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,c.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.header,{children:(0,n.jsx)(t.h1,{id:"kubectl-trace",children:"kubectl-trace"})}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.strong,{children:"kubectl-trace"})," is a powerful observability tool that enables Kubernetes users to ",(0,n.jsx)(t.strong,{children:"run BPF (Berkeley Packet Filter) tracing programs"})," like ",(0,n.jsx)(t.code,{children:"bpftrace"})," across their cluster nodes. It\u2019s designed for advanced users who want to ",(0,n.jsx)(t.strong,{children:"debug performance issues, monitor syscalls, and gain deep insights into system behavior"})," without leaving the Kubernetes environment."]}),"\n",(0,n.jsx)(t.p,{children:"It works by launching a privileged pod on a selected node and running BPF tracing scripts within it, giving real-time kernel-level visibility into what workloads are doing."}),"\n",(0,n.jsx)(t.hr,{}),"\n",(0,n.jsx)(t.h2,{id:"usage",children:"Usage"}),"\n",(0,n.jsx)(t.h3,{id:"1-install-kubectl-trace",children:"1. Install kubectl-trace"}),"\n",(0,n.jsxs)(t.p,{children:["You can install ",(0,n.jsx)(t.code,{children:"kubectl-trace"})," using Go:"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-bash",children:"go install github.com/iovisor/kubectl-trace@latest\n"})}),"\n",(0,n.jsx)(t.p,{children:"Or download a binary release from GitHub:"}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.a,{href:"https://github.com/iovisor/kubectl-trace/releases",children:"https://github.com/iovisor/kubectl-trace/releases"})}),"\n",(0,n.jsx)(t.hr,{}),"\n",(0,n.jsx)(t.h3,{id:"2-run-a-bpftrace-script-on-a-node",children:"2. Run a bpftrace Script on a Node"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-bash",children:"kubectl trace run <node-name> -e 'tracepoint:syscalls:sys_enter_openat { printf(\"%s opened %s\\n\", comm, str(args->filename)); }'\n"})}),"\n",(0,n.jsx)(t.p,{children:"This will:"}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsx)(t.li,{children:"Deploy a privileged pod on the node"}),"\n",(0,n.jsxs)(t.li,{children:["Execute the ",(0,n.jsx)(t.code,{children:"bpftrace"})," script"]}),"\n",(0,n.jsx)(t.li,{children:"Stream output from syscalls that match the tracepoint"}),"\n"]}),"\n",(0,n.jsx)(t.hr,{}),"\n",(0,n.jsx)(t.h3,{id:"3-collect-trace-results",children:"3. Collect Trace Results"}),"\n",(0,n.jsx)(t.p,{children:"You can watch the trace output directly:"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-bash",children:"kubectl logs -f <trace-pod-name>\n"})}),"\n",(0,n.jsx)(t.p,{children:"Or delete the trace job when complete:"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-bash",children:"kubectl trace delete <trace-id>\n"})}),"\n",(0,n.jsx)(t.hr,{}),"\n",(0,n.jsx)(t.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.strong,{children:"Use in staging or development clusters"}),", not production, due to the elevated privileges required."]}),"\n",(0,n.jsxs)(t.li,{children:["Ensure nodes support ",(0,n.jsx)(t.strong,{children:"eBPF and kernel headers"})," for ",(0,n.jsx)(t.code,{children:"bpftrace"}),"."]}),"\n",(0,n.jsx)(t.li,{children:"Validate that all trace scripts are safe and reviewed before execution."}),"\n",(0,n.jsxs)(t.li,{children:["Combine with ",(0,n.jsx)(t.strong,{children:"runtime anomaly detection"})," tools for deeper incident response workflows."]}),"\n",(0,n.jsx)(t.li,{children:"Clean up trace pods and jobs after completion to avoid resource waste."}),"\n"]}),"\n",(0,n.jsx)(t.hr,{}),"\n",(0,n.jsx)(t.h2,{id:"resources",children:"Resources"}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.strong,{children:"GitHub Repository:"})," ",(0,n.jsx)(t.a,{href:"https://github.com/iovisor/kubectl-trace",children:"https://github.com/iovisor/kubectl-trace"})]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.strong,{children:"Official Docs & Examples:"})," ",(0,n.jsx)(t.a,{href:"https://github.com/iovisor/kubectl-trace/blob/master/docs",children:"https://github.com/iovisor/kubectl-trace/blob/master/docs"})]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.strong,{children:"bpftrace Reference:"})," ",(0,n.jsx)(t.a,{href:"https://github.com/iovisor/bpftrace",children:"https://github.com/iovisor/bpftrace"})]}),"\n"]})]})}function u(e={}){const{wrapper:t}={...(0,c.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}}}]);