"use strict";(self.webpackChunkk_8_s_security=self.webpackChunkk_8_s_security||[]).push([[7272],{78:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>o,contentTitle:()=>c,default:()=>h,frontMatter:()=>r,metadata:()=>a,toc:()=>d});const a=JSON.parse('{"id":"k8s_security_basics/attack_vectors_examples/exposed_dashboard","title":"Exposed Kubernetes Dashboard","description":"Exploiting an exposed Kubernetes Dashboard and implementing best practices to secure dashboard access.","source":"@site/docs/k8s_security_basics/attack_vectors_examples/exposed_dashboard.md","sourceDirName":"k8s_security_basics/attack_vectors_examples","slug":"/k8s_security_basics/attack_vectors_examples/exposed_dashboard","permalink":"/k8s_security/docs/k8s_security_basics/attack_vectors_examples/exposed_dashboard","draft":false,"unlisted":false,"editUrl":"https://github.com/geek-kb/k8s_security/edit/main/docs/k8s_security_basics/attack_vectors_examples/exposed_dashboard.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2,"title":"Exposed Kubernetes Dashboard","description":"Exploiting an exposed Kubernetes Dashboard and implementing best practices to secure dashboard access."},"sidebar":"tutorialSidebar","previous":{"title":"Compromised API Server","permalink":"/k8s_security/docs/k8s_security_basics/attack_vectors_examples/compromised_api_server"},"next":{"title":"Privileged Containers","permalink":"/k8s_security/docs/k8s_security_basics/attack_vectors_examples/privileged_containers"}}');var t=n(4848),i=n(8453);const r={sidebar_position:2,title:"Exposed Kubernetes Dashboard",description:"Exploiting an exposed Kubernetes Dashboard and implementing best practices to secure dashboard access."},c="Exposed Kubernetes Dashboard",o={},d=[{value:"Exploitation Steps: Exposed Dashboard",id:"exploitation-steps-exposed-dashboard",level:2},{value:"1. Access the Dashboard Without Authentication",id:"1-access-the-dashboard-without-authentication",level:3},{value:"2. Execute Commands in the Cluster",id:"2-execute-commands-in-the-cluster",level:3},{value:"3. Create a New Admin User",id:"3-create-a-new-admin-user",level:3},{value:"Result",id:"result",level:3},{value:"Mitigation Techniques and Fixes",id:"mitigation-techniques-and-fixes",level:2},{value:"1. Avoid Exposing the Dashboard Publicly",id:"1-avoid-exposing-the-dashboard-publicly",level:3},{value:"Secure Access with Port Forwarding",id:"secure-access-with-port-forwarding",level:4},{value:"2. Enforce Authentication",id:"2-enforce-authentication",level:3},{value:"Enable Authentication via Service Account Token",id:"enable-authentication-via-service-account-token",level:4},{value:"3. Restrict Dashboard Privileges",id:"3-restrict-dashboard-privileges",level:3},{value:"Create a Restricted Role for the Dashboard",id:"create-a-restricted-role-for-the-dashboard",level:4},{value:"Conclusion",id:"conclusion",level:2}];function l(e){const s={code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(s.header,{children:(0,t.jsx)(s.h1,{id:"exposed-kubernetes-dashboard",children:"Exposed Kubernetes Dashboard"})}),"\n",(0,t.jsx)(s.p,{children:"The Kubernetes Dashboard is a web-based interface for managing Kubernetes clusters. However, if not properly secured, it can become a significant attack vector. An exposed dashboard with admin privileges and no authentication can allow an attacker to gain full control over the cluster."}),"\n",(0,t.jsx)(s.hr,{}),"\n",(0,t.jsx)(s.h2,{id:"exploitation-steps-exposed-dashboard",children:"Exploitation Steps: Exposed Dashboard"}),"\n",(0,t.jsx)(s.p,{children:"An attacker can identify an open Kubernetes Dashboard by performing a port scan:"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-bash",children:"nmap -p 30000-32767 <cluster-ip>\n"})}),"\n",(0,t.jsx)(s.h3,{id:"1-access-the-dashboard-without-authentication",children:"1. Access the Dashboard Without Authentication"}),"\n",(0,t.jsx)(s.p,{children:"The attacker locates the dashboard on a NodePort and accesses it through a web browser:"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-bash",children:"http://<cluster-ip>:<node-port>/\n"})}),"\n",(0,t.jsx)(s.h3,{id:"2-execute-commands-in-the-cluster",children:"2. Execute Commands in the Cluster"}),"\n",(0,t.jsx)(s.p,{children:"The attacker uses the dashboard's terminal to execute commands in a privileged pod:"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-bash",children:"kubectl exec -it privileged-pod -- /bin/sh\n"})}),"\n",(0,t.jsx)(s.h3,{id:"3-create-a-new-admin-user",children:"3. Create a New Admin User"}),"\n",(0,t.jsx)(s.p,{children:"The attacker creates a new admin ServiceAccount and binds it to the cluster-admin role:"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-yaml",children:"apiVersion: v1\nkind: ServiceAccount\nmetadata:\n  name: attacker-admin\n  namespace: kube-system\n---\napiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRoleBinding\nmetadata:\n  name: attacker-admin-binding\nsubjects:\n- kind: ServiceAccount\n  name: attacker-admin\n  namespace: kube-system\nroleRef:\n  kind: ClusterRole\n  name: cluster-admin\n  apiGroup: rbac.authorization.k8s.io\n"})}),"\n",(0,t.jsx)(s.h3,{id:"result",children:"Result"}),"\n",(0,t.jsx)(s.p,{children:"The attacker gains admin access to the cluster, enabling them to deploy malicious workloads, exfiltrate data, or destroy resources."}),"\n",(0,t.jsx)(s.hr,{}),"\n",(0,t.jsx)(s.h2,{id:"mitigation-techniques-and-fixes",children:"Mitigation Techniques and Fixes"}),"\n",(0,t.jsx)(s.h3,{id:"1-avoid-exposing-the-dashboard-publicly",children:"1. Avoid Exposing the Dashboard Publicly"}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"Issue:"})," The dashboard is accessible without authentication over a NodePort."]}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"Fix:"})," Use a secure network proxy or port-forwarding instead."]}),"\n",(0,t.jsx)(s.h4,{id:"secure-access-with-port-forwarding",children:"Secure Access with Port Forwarding"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-bash",children:"kubectl proxy\n# Access the dashboard securely\nhttp://localhost:8001/api/v1/namespaces/kubernetes-dashboard/services/https:kubernetes-dashboard:/proxy/\n"})}),"\n",(0,t.jsx)(s.h3,{id:"2-enforce-authentication",children:"2. Enforce Authentication"}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"Issue:"})," Lack of authentication allows unauthorized access."]}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"Fix:"})," Implement token-based authentication and disable guest access."]}),"\n",(0,t.jsx)(s.h4,{id:"enable-authentication-via-service-account-token",children:"Enable Authentication via Service Account Token"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-bash",children:"kubectl create serviceaccount dashboard-admin -n kube-system\nkubectl create clusterrolebinding dashboard-admin-binding \\\n  --clusterrole=cluster-admin \\\n  --serviceaccount=kube-system:dashboard-admin\nkubectl get secrets -n kube-system | grep dashboard-admin\nkubectl describe secret <dashboard-admin-token> -n kube-system\n"})}),"\n",(0,t.jsx)(s.h3,{id:"3-restrict-dashboard-privileges",children:"3. Restrict Dashboard Privileges"}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"Issue:"})," The dashboard runs with cluster-admin privileges, exposing the entire cluster to risk."]}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"Fix:"})," Limit the ServiceAccount permissions using RBAC."]}),"\n",(0,t.jsx)(s.h4,{id:"create-a-restricted-role-for-the-dashboard",children:"Create a Restricted Role for the Dashboard"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-yaml",children:'apiVersion: rbac.authorization.k8s.io/v1\nkind: Role\nmetadata:\n  name: restricted-dashboard-role\n  namespace: kube-system\nrules:\n- apiGroups: [""]\n  resources: ["pods", "services"]\n  verbs: ["get", "list"]\n---\napiVersion: rbac.authorization.k8s.io/v1\nkind: RoleBinding\nmetadata:\n  name: restricted-dashboard-binding\n  namespace: kube-system\nsubjects:\n- kind: ServiceAccount\n  name: dashboard\n  namespace: kube-system\nroleRef:\n  kind: Role\n  name: restricted-dashboard-role\n  apiGroup: rbac.authorization.k8s.io\n'})}),"\n",(0,t.jsx)(s.hr,{}),"\n",(0,t.jsx)(s.h2,{id:"conclusion",children:"Conclusion"}),"\n",(0,t.jsx)(s.p,{children:"To secure the Kubernetes Dashboard:"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:"Never expose the dashboard directly to the internet."}),"\n",(0,t.jsx)(s.li,{children:"Always enforce authentication using Service Account tokens."}),"\n",(0,t.jsx)(s.li,{children:"Apply the principle of least privilege by assigning restricted roles to the dashboard."}),"\n"]})]})}function h(e={}){const{wrapper:s}={...(0,i.R)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},8453:(e,s,n)=>{n.d(s,{R:()=>r,x:()=>c});var a=n(6540);const t={},i=a.createContext(t);function r(e){const s=a.useContext(i);return a.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function c(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),a.createElement(i.Provider,{value:s},e.children)}}}]);