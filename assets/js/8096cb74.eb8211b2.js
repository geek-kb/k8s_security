"use strict";(self.webpackChunkk_8_s_security=self.webpackChunkk_8_s_security||[]).push([[5444],{6446:(e,s,t)=>{t.r(s),t.d(s,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>r,metadata:()=>n,toc:()=>l});const n=JSON.parse('{"id":"attack_vectors/exposed_dashboard","title":"Exposed Kubernetes Dashboard","description":"How an exposed and over-privileged Kubernetes Dashboard can become an entry point for full cluster compromise.","source":"@site/docs/attack_vectors/exposed_dashboard.md","sourceDirName":"attack_vectors","slug":"/attack_vectors/exposed_dashboard","permalink":"/k8s_security/docs/attack_vectors/exposed_dashboard","draft":false,"unlisted":false,"editUrl":"https://github.com/geek-kb/k8s_security/edit/main/docs/attack_vectors/exposed_dashboard.md","tags":[],"version":"current","sidebarPosition":8,"frontMatter":{"sidebar_position":8,"title":"Exposed Kubernetes Dashboard","description":"How an exposed and over-privileged Kubernetes Dashboard can become an entry point for full cluster compromise."},"sidebar":"guidesSidebar","previous":{"title":"Container Escape Guide","permalink":"/k8s_security/docs/attack_vectors/container_escape"},"next":{"title":"Insecure RBAC Permissions","permalink":"/k8s_security/docs/attack_vectors/insecure_rbac_permissions"}}');var o=t(4848),i=t(8453);const r={sidebar_position:8,title:"Exposed Kubernetes Dashboard",description:"How an exposed and over-privileged Kubernetes Dashboard can become an entry point for full cluster compromise."},a="Exposed Kubernetes Dashboard",c={},l=[{value:"Background",id:"background",level:2},{value:"Common Misconfigurations",id:"common-misconfigurations",level:2},{value:"Exploitation Walkthrough",id:"exploitation-walkthrough",level:2},{value:"Step 1: Access the Dashboard",id:"step-1-access-the-dashboard",level:3},{value:"Step 2: Explore Available Actions",id:"step-2-explore-available-actions",level:3},{value:"Step 3: Deploy a Privileged Pod",id:"step-3-deploy-a-privileged-pod",level:3},{value:"Step 4: Escape to the Host System",id:"step-4-escape-to-the-host-system",level:3},{value:"Summary",id:"summary",level:2}];function d(e){const s={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(s.header,{children:(0,o.jsx)(s.h1,{id:"exposed-kubernetes-dashboard",children:"Exposed Kubernetes Dashboard"})}),"\n",(0,o.jsx)(s.p,{children:"The Kubernetes Dashboard is a web-based UI for managing workloads and cluster resources. While useful for development and troubleshooting, it can pose a serious security risk if exposed without proper network controls, authentication, and access restrictions."}),"\n",(0,o.jsx)(s.p,{children:"This article explores how multiple misconfigurations can align to expose the Dashboard and allow an attacker to gain full control over the cluster."}),"\n",(0,o.jsx)(s.hr,{}),"\n",(0,o.jsx)(s.h2,{id:"background",children:"Background"}),"\n",(0,o.jsx)(s.p,{children:"In secure Kubernetes clusters, the Dashboard should not be accessible from the public internet, should require authentication, and should not be bound to a high-privilege service account. However, in misconfigured environments\u2014especially development or test clusters\u2014it is possible for all of these protections to be missing."}),"\n",(0,o.jsx)(s.p,{children:"This scenario outlines a chain of misconfigurations that, when combined, lead to full cluster compromise."}),"\n",(0,o.jsx)(s.hr,{}),"\n",(0,o.jsx)(s.h2,{id:"common-misconfigurations",children:"Common Misconfigurations"}),"\n",(0,o.jsx)(s.p,{children:"The following conditions must be present for the Dashboard to be exploitable:"}),"\n",(0,o.jsxs)(s.ul,{children:["\n",(0,o.jsx)(s.li,{children:"The Dashboard is accessible externally through a public IP or port."}),"\n",(0,o.jsx)(s.li,{children:"Authentication is disabled or bypassed."}),"\n",(0,o.jsxs)(s.li,{children:["The Dashboard's service account is bound to a high-privilege ClusterRole, such as ",(0,o.jsx)(s.code,{children:"cluster-admin"}),"."]}),"\n",(0,o.jsx)(s.li,{children:"Network-level controls (e.g., firewall rules or security groups) allow external access to the exposed port."}),"\n"]}),"\n",(0,o.jsx)(s.p,{children:"Any one of these in isolation may not result in a successful exploit. Together, they enable full administrative access to the cluster."}),"\n",(0,o.jsx)(s.hr,{}),"\n",(0,o.jsx)(s.h2,{id:"exploitation-walkthrough",children:"Exploitation Walkthrough"}),"\n",(0,o.jsx)(s.h3,{id:"step-1-access-the-dashboard",children:"Step 1: Access the Dashboard"}),"\n",(0,o.jsx)(s.p,{children:"The attacker identifies a publicly exposed Kubernetes Dashboard through port scanning, misconfigured Ingress, or a LoadBalancer service."}),"\n",(0,o.jsx)(s.p,{children:"For example:"}),"\n",(0,o.jsx)(s.pre,{children:(0,o.jsx)(s.code,{children:"http://<public-ip>:8001/api/v1/namespaces/kubernetes-dashboard/services/https:kubernetes-dashboard:/proxy/\n"})}),"\n",(0,o.jsx)(s.p,{children:"If no authentication is required, the attacker gains direct access to the UI."}),"\n",(0,o.jsx)(s.h3,{id:"step-2-explore-available-actions",children:"Step 2: Explore Available Actions"}),"\n",(0,o.jsx)(s.p,{children:"Once inside the Dashboard, the attacker tests for permissions such as:"}),"\n",(0,o.jsxs)(s.ul,{children:["\n",(0,o.jsx)(s.li,{children:"Viewing namespaces, secrets, pods, and deployments"}),"\n",(0,o.jsx)(s.li,{children:"Creating new resources"}),"\n",(0,o.jsx)(s.li,{children:"Executing commands inside running pods"}),"\n"]}),"\n",(0,o.jsxs)(s.p,{children:["If the Dashboard is using a service account with ",(0,o.jsx)(s.code,{children:"cluster-admin"})," permissions, all of these actions are allowed."]}),"\n",(0,o.jsx)(s.h3,{id:"step-3-deploy-a-privileged-pod",children:"Step 3: Deploy a Privileged Pod"}),"\n",(0,o.jsx)(s.p,{children:"The attacker uses the Dashboard\u2019s resource creation feature to deploy a pod with host-level access:"}),"\n",(0,o.jsx)(s.pre,{children:(0,o.jsx)(s.code,{className:"language-yaml",children:'apiVersion: v1\nkind: Pod\nmetadata:\n  name: pwned\nspec:\n  containers:\n  - name: shell\n    image: alpine\n    command: ["/bin/sh"]\n    args: ["-c", "sleep infinity"]\n    securityContext:\n      privileged: true\n  hostPID: true\n  restartPolicy: Never\n'})}),"\n",(0,o.jsx)(s.p,{children:"The pod runs in privileged mode with access to the host process namespace."}),"\n",(0,o.jsx)(s.h3,{id:"step-4-escape-to-the-host-system",children:"Step 4: Escape to the Host System"}),"\n",(0,o.jsx)(s.p,{children:"Using the Dashboard\u2019s Exec feature, the attacker enters the pod and executes the following command:"}),"\n",(0,o.jsx)(s.pre,{children:(0,o.jsx)(s.code,{className:"language-bash",children:"nsenter --target 1 --mount --uts --ipc --net --pid /bin/sh\n"})}),"\n",(0,o.jsx)(s.p,{children:"If successful, the attacker escapes the container and gains a shell on the host node, effectively bypassing Kubernetes isolation."}),"\n",(0,o.jsx)(s.hr,{}),"\n",(0,o.jsx)(s.h2,{id:"summary",children:"Summary"}),"\n",(0,o.jsx)(s.p,{children:"An exposed and over-privileged Kubernetes Dashboard is not a vulnerability in itself, but rather the result of multiple misconfigurations. When combined, these missteps provide an attacker with a clear path to full cluster takeover."}),"\n",(0,o.jsx)(s.p,{children:"Although most secure production environments would not be affected by this chain, it remains a valuable example for understanding how layered security misconfigurations can be exploited. It also highlights the importance of hardening development and staging environments to the same standard as production."}),"\n",(0,o.jsx)(s.p,{children:"For guidance on how to mitigate this risk, refer to the mitigation guide:"}),"\n",(0,o.jsx)(s.p,{children:(0,o.jsx)(s.a,{href:"/docs/best_practices/cluster_setup_and_hardening/network_security/exposed_dashboard_mitigation",children:"Exposed Dashboard Mitigation"})})]})}function h(e={}){const{wrapper:s}={...(0,i.R)(),...e.components};return s?(0,o.jsx)(s,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},8453:(e,s,t)=>{t.d(s,{R:()=>r,x:()=>a});var n=t(6540);const o={},i=n.createContext(o);function r(e){const s=n.useContext(i);return n.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function a(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),n.createElement(i.Provider,{value:s},e.children)}}}]);