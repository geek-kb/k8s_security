"use strict";(self.webpackChunkk_8_s_security=self.webpackChunkk_8_s_security||[]).push([[4015],{1714:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>a,contentTitle:()=>o,default:()=>u,frontMatter:()=>c,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"best_practices/cluster_setup_and_hardening/network_security/ingress_security","title":"Ingress Security","description":"Learn how to secure Kubernetes ingress traffic with TLS encryption, authentication, and Web Application Firewalls (WAF).","source":"@site/docs/best_practices/cluster_setup_and_hardening/network_security/ingress_security.md","sourceDirName":"best_practices/cluster_setup_and_hardening/network_security","slug":"/best_practices/cluster_setup_and_hardening/network_security/ingress_security","permalink":"/docs/best_practices/cluster_setup_and_hardening/network_security/ingress_security","draft":false,"unlisted":false,"tags":[],"version":"current","lastUpdatedBy":"Itai Ganot","lastUpdatedAt":1742746202000,"sidebarPosition":6,"frontMatter":{"title":"Ingress Security","description":"Learn how to secure Kubernetes ingress traffic with TLS encryption, authentication, and Web Application Firewalls (WAF).","sidebar_position":6},"sidebar":"default","previous":{"title":"Exposed Kubernetes Dashboard Mitigation","permalink":"/docs/best_practices/cluster_setup_and_hardening/network_security/exposed_dashboard_mitigation"},"next":{"title":"Network Policies","permalink":"/docs/best_practices/cluster_setup_and_hardening/network_security/network_policies"}}');var r=n(4848),i=n(8453);const c={title:"Ingress Security",description:"Learn how to secure Kubernetes ingress traffic with TLS encryption, authentication, and Web Application Firewalls (WAF).",sidebar_position:6},o="Ingress Security",a={},l=[{value:"Best Practices for Ingress Security",id:"best-practices-for-ingress-security",level:2},{value:"1. Enforce TLS Encryption",id:"1-enforce-tls-encryption",level:3},{value:"2. Use Web Application Firewalls (WAF)",id:"2-use-web-application-firewalls-waf",level:3},{value:"3. Restrict Allowed Hosts",id:"3-restrict-allowed-hosts",level:3}];function d(e){const s={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(s.header,{children:(0,r.jsx)(s.h1,{id:"ingress-security",children:"Ingress Security"})}),"\n",(0,r.jsxs)(s.p,{children:["Ingress Controllers handle ",(0,r.jsx)(s.strong,{children:"external traffic"})," entering the Kubernetes cluster. ",(0,r.jsx)(s.strong,{children:"Securing ingress traffic"})," is essential to prevent ",(0,r.jsx)(s.strong,{children:"unauthorized access, data leaks, and API abuse"}),"."]}),"\n",(0,r.jsx)(s.h2,{id:"best-practices-for-ingress-security",children:"Best Practices for Ingress Security"}),"\n",(0,r.jsx)(s.h3,{id:"1-enforce-tls-encryption",children:"1. Enforce TLS Encryption"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:["Use ",(0,r.jsx)(s.strong,{children:"Let's Encrypt"})," with ",(0,r.jsx)(s.strong,{children:"Cert-Manager"})," to automatically issue ",(0,r.jsx)(s.strong,{children:"TLS certificates"}),"."]}),"\n",(0,r.jsxs)(s.li,{children:["Enforce ",(0,r.jsx)(s.strong,{children:"TLS termination"})," at the ingress controller level."]}),"\n"]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-yaml",children:'apiVersion: networking.k8s.io/v1\nkind: Ingress\nmetadata:\n  name: secure-ingress\n  annotations:\n    cert-manager.io/issuer: "letsencrypt-prod"\nspec:\n  tls:\n    - hosts:\n        - example.com\n      secretName: tls-secret\n  rules:\n    - host: example.com\n      http:\n        paths:\n          - path: /\n            pathType: Prefix\n            backend:\n              service:\n                name: my-service\n                port:\n                  number: 443\n'})}),"\n",(0,r.jsx)(s.h3,{id:"2-use-web-application-firewalls-waf",children:"2. Use Web Application Firewalls (WAF)"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:["Deploy ",(0,r.jsx)(s.strong,{children:"Cloudflare WAF, AWS WAF, or ModSecurity"})," to ",(0,r.jsx)(s.strong,{children:"detect and block malicious traffic"}),"."]}),"\n",(0,r.jsxs)(s.li,{children:["Implement ",(0,r.jsx)(s.strong,{children:"rate limiting"})," to prevent ",(0,r.jsx)(s.strong,{children:"DDoS attacks"}),"."]}),"\n"]}),"\n",(0,r.jsx)(s.h3,{id:"3-restrict-allowed-hosts",children:"3. Restrict Allowed Hosts"}),"\n",(0,r.jsxs)(s.ul,{children:["\n",(0,r.jsxs)(s.li,{children:["Define ",(0,r.jsxs)(s.strong,{children:[(0,r.jsx)(s.code,{children:"host"})," rules"]})," to allow traffic ",(0,r.jsx)(s.strong,{children:"only from specific domains"}),"."]}),"\n"]}),"\n",(0,r.jsxs)(s.p,{children:["By following these best practices, you can ",(0,r.jsx)(s.strong,{children:"protect Kubernetes ingress traffic"})," and prevent ",(0,r.jsx)(s.strong,{children:"external threats"})," from reaching internal services."]})]})}function u(e={}){const{wrapper:s}={...(0,i.R)(),...e.components};return s?(0,r.jsx)(s,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},8453:(e,s,n)=>{n.d(s,{R:()=>c,x:()=>o});var t=n(6540);const r={},i=t.createContext(r);function c(e){const s=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function o(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:c(e.components),t.createElement(i.Provider,{value:s},e.children)}}}]);