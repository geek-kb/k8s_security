"use strict";(self.webpackChunkk_8_s_security=self.webpackChunkk_8_s_security||[]).push([[9054],{6243:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>u,default:()=>d,frontMatter:()=>a,metadata:()=>s,toc:()=>o});const s=JSON.parse('{"id":"best_practices/cluster_setup_and_hardening/network_security/kube_hunter","title":"kube-hunter","description":"A penetration testing tool that helps identify security weaknesses in Kubernetes clusters by simulating real-world attack vectors.","source":"@site/docs/best_practices/cluster_setup_and_hardening/network_security/kube_hunter.md","sourceDirName":"best_practices/cluster_setup_and_hardening/network_security","slug":"/best_practices/cluster_setup_and_hardening/network_security/kube_hunter","permalink":"/docs/best_practices/cluster_setup_and_hardening/network_security/kube_hunter","draft":false,"unlisted":false,"tags":[],"version":"current","lastUpdatedBy":"Itai Ganot","lastUpdatedAt":1742842158000,"sidebarPosition":10,"frontMatter":{"title":"kube-hunter","description":"A penetration testing tool that helps identify security weaknesses in Kubernetes clusters by simulating real-world attack vectors.","sidebar_position":10},"sidebar":"default","previous":{"title":"Securing Kubernetes Network Traffic","permalink":"/docs/best_practices/cluster_setup_and_hardening/network_security/traffic_hijacking_mitigation"},"next":{"title":"Cilium","permalink":"/docs/best_practices/cluster_setup_and_hardening/network_security/cilium"}}');var i=t(4848),r=t(8453);const a={title:"kube-hunter",description:"A penetration testing tool that helps identify security weaknesses in Kubernetes clusters by simulating real-world attack vectors.",sidebar_position:10},u="kube-hunter",c={},o=[{value:"Usage",id:"usage",level:2},{value:"Install via pip",id:"install-via-pip",level:3},{value:"Run in Remote Scanning Mode",id:"run-in-remote-scanning-mode",level:3},{value:"Run Inside the Cluster",id:"run-inside-the-cluster",level:3},{value:"Run in Active Hunting Mode",id:"run-in-active-hunting-mode",level:3},{value:"Example Findings",id:"example-findings",level:2},{value:"Best Practices",id:"best-practices",level:2},{value:"Summary",id:"summary",level:2}];function l(e){const n={a:"a",br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"kube-hunter",children:"kube-hunter"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"kube-hunter"})," is an open-source Kubernetes penetration testing tool developed by Aqua Security. It simulates attacker behavior to identify misconfigurations, insecure setups, and potential vulnerabilities in Kubernetes clusters. kube-hunter is particularly useful for discovering open ports, exposed services, and weak access controls that may lead to lateral movement or privilege escalation."]}),"\n",(0,i.jsx)(n.p,{children:"It supports both passive and active hunting modes, enabling safe inspection or deep penetration testing of environments."}),"\n",(0,i.jsxs)(n.p,{children:["Official site: ",(0,i.jsx)(n.a,{href:"https://aquasecurity.github.io/kube-hunter/",children:"https://aquasecurity.github.io/kube-hunter/"}),(0,i.jsx)(n.br,{}),"\n","GitHub repository: ",(0,i.jsx)(n.a,{href:"https://github.com/aquasecurity/kube-hunter",children:"https://github.com/aquasecurity/kube-hunter"})]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n",(0,i.jsxs)(n.p,{children:["You can run kube-hunter either ",(0,i.jsx)(n.strong,{children:"remotely"})," (from outside the cluster) or ",(0,i.jsx)(n.strong,{children:"from within a pod"})," for internal hunting."]}),"\n",(0,i.jsx)(n.h3,{id:"install-via-pip",children:"Install via pip"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"pip install kube-hunter\n"})}),"\n",(0,i.jsx)(n.h3,{id:"run-in-remote-scanning-mode",children:"Run in Remote Scanning Mode"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"kube-hunter --remote <target-node-ip>\n"})}),"\n",(0,i.jsx)(n.p,{children:"This mode scans for publicly exposed services and ports on a given IP."}),"\n",(0,i.jsx)(n.h3,{id:"run-inside-the-cluster",children:"Run Inside the Cluster"}),"\n",(0,i.jsx)(n.p,{children:"Deploy kube-hunter as a pod inside the cluster for internal reconnaissance:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"kubectl run kube-hunter --rm -it \\\n  --image=aquasec/kube-hunter \\\n  --serviceaccount=kube-hunter \\\n  --restart=Never\n"})}),"\n",(0,i.jsx)(n.h3,{id:"run-in-active-hunting-mode",children:"Run in Active Hunting Mode"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"kube-hunter --active\n"})}),"\n",(0,i.jsxs)(n.p,{children:["This mode simulates real attacks and should ",(0,i.jsx)(n.strong,{children:"only be run in non-production environments"})," with permission."]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"example-findings",children:"Example Findings"}),"\n",(0,i.jsx)(n.p,{children:"kube-hunter may report:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Exposed Dashboard or Kubelet APIs"}),"\n",(0,i.jsx)(n.li,{children:"Anonymous access to the API Server"}),"\n",(0,i.jsx)(n.li,{children:"Accessible etcd endpoints"}),"\n",(0,i.jsxs)(n.li,{children:["Insecure use of ",(0,i.jsx)(n.code,{children:"hostPath"})," volumes"]}),"\n",(0,i.jsx)(n.li,{children:"Privileged containers or pods"}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Use kube-hunter in ",(0,i.jsx)(n.strong,{children:"non-production"})," or isolated environments only."]}),"\n",(0,i.jsx)(n.li,{children:"Perform periodic scans to identify newly introduced misconfigurations."}),"\n",(0,i.jsx)(n.li,{children:"Run both internal and external scans to test different attack surfaces."}),"\n",(0,i.jsx)(n.li,{children:"Combine with other tools (e.g., Trivy, kube-bench) for complete posture analysis."}),"\n",(0,i.jsx)(n.li,{children:"Regularly update kube-hunter to benefit from new attack signatures and fixes."}),"\n",(0,i.jsx)(n.li,{children:"Integrate with CI pipelines for proactive misconfiguration detection (optional)."}),"\n"]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"summary",children:"Summary"}),"\n",(0,i.jsx)(n.p,{children:"kube-hunter helps security teams and cluster operators identify Kubernetes misconfigurations before attackers do. It\u2019s a valuable addition to Kubernetes security assessments, especially during penetration testing, threat modeling, or pre-production readiness checks."})]})}function d(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>u});var s=t(6540);const i={},r=s.createContext(i);function a(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function u(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);