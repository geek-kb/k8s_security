"use strict";(self.webpackChunkk_8_s_security=self.webpackChunkk_8_s_security||[]).push([[5883],{362:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>c,default:()=>u,frontMatter:()=>o,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"best_practices/cluster_setup_and_hardening/network_security/network_policies","title":"Network Policies","description":"Explore how Network Policies in Kubernetes control traffic flow and enhance security.","source":"@site/docs/best_practices/cluster_setup_and_hardening/network_security/network_policies.md","sourceDirName":"best_practices/cluster_setup_and_hardening/network_security","slug":"/best_practices/cluster_setup_and_hardening/network_security/network_policies","permalink":"/k8s_security/docs/best_practices/cluster_setup_and_hardening/network_security/network_policies","draft":false,"unlisted":false,"editUrl":"https://github.com/geek-kb/k8s_security/edit/main/docs/best_practices/cluster_setup_and_hardening/network_security/network_policies.md","tags":[],"version":"current","sidebarPosition":5,"frontMatter":{"sidebar_position":5,"title":"Network Policies","description":"Explore how Network Policies in Kubernetes control traffic flow and enhance security."},"sidebar":"guidesSidebar","previous":{"title":"Kubelet Security","permalink":"/k8s_security/docs/best_practices/cluster_setup_and_hardening/kubelet_security"},"next":{"title":"Pod Security Standards (PSS)","permalink":"/k8s_security/docs/best_practices/cluster_setup_and_hardening/pod_security/pod_security_standards"}}');var r=s(4848),i=s(8453);const o={sidebar_position:5,title:"Network Policies",description:"Explore how Network Policies in Kubernetes control traffic flow and enhance security."},c="Network Policies",l={},d=[{value:"\ud83d\udea9 How Network Policies Work",id:"-how-network-policies-work",level:2},{value:"\ud83d\udee0\ufe0f Example: Default Deny All Policy",id:"\ufe0f-example-default-deny-all-policy",level:2},{value:"\u2705 Key Takeaway",id:"-key-takeaway",level:2}];function a(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"network-policies",children:"Network Policies"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Network Policies"})," in ",(0,r.jsx)(n.strong,{children:"Kubernetes"})," are a ",(0,r.jsx)(n.strong,{children:"security primitive"})," used to ",(0,r.jsx)(n.strong,{children:"control traffic flow"})," between ",(0,r.jsx)(n.strong,{children:"pods"})," and ",(0,r.jsx)(n.strong,{children:"external services"}),". They provide ",(0,r.jsx)(n.strong,{children:"network segmentation"})," and ",(0,r.jsx)(n.strong,{children:"restrict communications"})," within the ",(0,r.jsx)(n.strong,{children:"cluster"}),"."]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"-how-network-policies-work",children:"\ud83d\udea9 How Network Policies Work"}),"\n",(0,r.jsxs)(n.p,{children:["Network Policies are based on ",(0,r.jsx)(n.strong,{children:"selectors"})," and ",(0,r.jsx)(n.strong,{children:"rules"}),":"]}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Pod Selector:"})," Defines which ",(0,r.jsx)(n.strong,{children:"pods"})," the policy ",(0,r.jsx)(n.strong,{children:"applies to"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Ingress Rules:"})," Control ",(0,r.jsx)(n.strong,{children:"incoming traffic"})," to ",(0,r.jsx)(n.strong,{children:"selected pods"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Egress Rules:"})," Control ",(0,r.jsx)(n.strong,{children:"outgoing traffic"})," from ",(0,r.jsx)(n.strong,{children:"selected pods"}),"."]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"\ufe0f-example-default-deny-all-policy",children:"\ud83d\udee0\ufe0f Example: Default Deny All Policy"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"apiVersion: networking.k8s.io/v1\nkind: NetworkPolicy\nmetadata:\n  name: default-deny\n  namespace: default\nspec:\n  podSelector: {}\n  policyTypes:\n  - Ingress\n  - Egress\n"})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"-key-takeaway",children:"\u2705 Key Takeaway"}),"\n",(0,r.jsxs)(n.p,{children:["Use ",(0,r.jsx)(n.strong,{children:"Network Policies"})," to ",(0,r.jsx)(n.strong,{children:"restrict pod-to-pod communication"})," and ",(0,r.jsx)(n.strong,{children:"enforce segmentation"})," within the ",(0,r.jsx)(n.strong,{children:"Kubernetes cluster"}),"."]})]})}function u(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(a,{...e})}):a(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>c});var t=s(6540);const r={},i=t.createContext(r);function o(e){const n=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);