"use strict";(self.webpackChunkk_8_s_security=self.webpackChunkk_8_s_security||[]).push([[1385],{4400:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>o,contentTitle:()=>a,default:()=>u,frontMatter:()=>c,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"best_practices/cluster_setup_and_hardening/pod_security/container_escape_mitigation","title":"Preventing Container Escape","description":"Best practices for securing Kubernetes containers to prevent escape attacks and host system compromise.","source":"@site/docs/best_practices/cluster_setup_and_hardening/pod_security/container_escape_mitigation.md","sourceDirName":"best_practices/cluster_setup_and_hardening/pod_security","slug":"/best_practices/cluster_setup_and_hardening/pod_security/container_escape_mitigation","permalink":"/k8s_security/docs/best_practices/cluster_setup_and_hardening/pod_security/container_escape_mitigation","draft":false,"unlisted":false,"editUrl":"https://github.com/geek-kb/k8s_security/edit/main/docs/best_practices/cluster_setup_and_hardening/pod_security/container_escape_mitigation.md","tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"sidebar_position":4,"title":"Preventing Container Escape","description":"Best practices for securing Kubernetes containers to prevent escape attacks and host system compromise."},"sidebar":"guidesSidebar","previous":{"title":"AppArmor Profiles","permalink":"/k8s_security/docs/best_practices/cluster_setup_and_hardening/pod_security/app_armor_profiles"},"next":{"title":"Pod Sandboxing","permalink":"/k8s_security/docs/best_practices/cluster_setup_and_hardening/pod_security/pod_sandboxing"}}');var t=s(4848),r=s(8453);const c={sidebar_position:4,title:"Preventing Container Escape",description:"Best practices for securing Kubernetes containers to prevent escape attacks and host system compromise."},a="Preventing Container Escape",o={},l=[{value:"1. Disable Privileged Containers",id:"1-disable-privileged-containers",level:2},{value:"Secure Configuration",id:"secure-configuration",level:3},{value:"Why It Matters",id:"why-it-matters",level:3},{value:"2. Use Seccomp to Restrict Syscalls",id:"2-use-seccomp-to-restrict-syscalls",level:2},{value:"Secure Configuration with Seccomp",id:"secure-configuration-with-seccomp",level:3},{value:"Why It Matters",id:"why-it-matters-1",level:3},{value:"3. Enforce Pod Security Standards",id:"3-enforce-pod-security-standards",level:2},{value:"Example: Enforcing Restricted Policy",id:"example-enforcing-restricted-policy",level:3},{value:"Why It Matters",id:"why-it-matters-2",level:3},{value:"4. Implement Container Sandboxing",id:"4-implement-container-sandboxing",level:2},{value:"Example: Running with gVisor",id:"example-running-with-gvisor",level:3},{value:"Why It Matters",id:"why-it-matters-3",level:3},{value:"Conclusion",id:"conclusion",level:2}];function d(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"preventing-container-escape",children:"Preventing Container Escape"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Container escape"})," occurs when an attacker exploits security flaws to break out of a container and gain access to the host system. This can lead to ",(0,t.jsx)(n.strong,{children:"privilege escalation, data theft, lateral movement, and full cluster compromise"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["To mitigate container escape risks, Kubernetes administrators should enforce ",(0,t.jsx)(n.strong,{children:"strict security controls"})," at the container and pod level."]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"1-disable-privileged-containers",children:"1. Disable Privileged Containers"}),"\n",(0,t.jsxs)(n.p,{children:["Running a container with ",(0,t.jsx)(n.code,{children:"privileged: true"})," gives it full access to the host system, increasing the risk of escape."]}),"\n",(0,t.jsx)(n.h3,{id:"secure-configuration",children:"Secure Configuration"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:"apiVersion: v1\nkind: Pod\nmetadata:\n  name: secure-pod\nspec:\n  containers:\n    - name: app-container\n      image: secure-image\n      securityContext:\n        privileged: false\n"})}),"\n",(0,t.jsx)(n.h3,{id:"why-it-matters",children:"Why It Matters"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Prevents"})," access to kernel modules and sensitive host files.",(0,t.jsx)("br",{})]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Restricts"})," direct interaction with the host\u2019s networking and devices."]}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"2-use-seccomp-to-restrict-syscalls",children:"2. Use Seccomp to Restrict Syscalls"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Seccomp (Secure Computing Mode)"})," filters system calls available to containers, reducing the attack surface."]}),"\n",(0,t.jsx)(n.h3,{id:"secure-configuration-with-seccomp",children:"Secure Configuration with Seccomp"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:'apiVersion: v1\nkind: Pod\nmetadata:\n  name: seccomp-pod\n  annotations:\n    container.seccomp.security.alpha.kubernetes.io/app-container: "docker/default"\nspec:\n  containers:\n    - name: app-container\n      image: secure-image\n'})}),"\n",(0,t.jsx)(n.h3,{id:"why-it-matters-1",children:"Why It Matters"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Blocks"})," dangerous syscalls used for privilege escalation.",(0,t.jsx)("br",{})]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Prevents"})," exploitation of kernel vulnerabilities."]}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"3-enforce-pod-security-standards",children:"3. Enforce Pod Security Standards"}),"\n",(0,t.jsxs)(n.p,{children:["Use ",(0,t.jsx)(n.strong,{children:"Pod Security Admission (PSA)"})," to enforce security policies that restrict dangerous configurations."]}),"\n",(0,t.jsx)(n.h3,{id:"example-enforcing-restricted-policy",children:"Example: Enforcing Restricted Policy"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:"apiVersion: policy/v1beta1\nkind: PodSecurityPolicy\nmetadata:\n  name: restricted-psp\nspec:\n  privileged: false\n  runAsUser:\n    rule: MustRunAsNonRoot\n  seLinux:\n    rule: RunAsAny\n  fsGroup:\n    rule: RunAsAny\n"})}),"\n",(0,t.jsx)(n.h3,{id:"why-it-matters-2",children:"Why It Matters"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Ensures"})," that pods run with the least privilege.",(0,t.jsx)("br",{})]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Blocks"})," dangerous configurations like root access."]}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"4-implement-container-sandboxing",children:"4. Implement Container Sandboxing"}),"\n",(0,t.jsxs)(n.p,{children:["Use ",(0,t.jsx)(n.strong,{children:"Kata Containers, gVisor, or Firecracker"})," to provide additional security layers between the container and the host."]}),"\n",(0,t.jsx)(n.h3,{id:"example-running-with-gvisor",children:"Example: Running with gVisor"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:"apiVersion: v1\nkind: Pod\nmetadata:\n  name: sandboxed-pod\nspec:\n  runtimeClassName: gvisor\n  containers:\n    - name: app-container\n      image: secure-image\n"})}),"\n",(0,t.jsx)(n.h3,{id:"why-it-matters-3",children:"Why It Matters"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Prevents"})," attackers from escaping the container to the host.",(0,t.jsx)("br",{})]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Creates"})," additional isolation layers for security."]}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"conclusion",children:"Conclusion"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Preventing container escape"})," is essential for Kubernetes security. By ",(0,t.jsx)(n.strong,{children:"disabling privileged containers, enforcing security profiles, and using sandboxed runtimes"}),", you can significantly reduce the risk of container breakout attacks."]})]})}function u(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>c,x:()=>a});var i=s(6540);const t={},r=i.createContext(t);function c(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:c(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);